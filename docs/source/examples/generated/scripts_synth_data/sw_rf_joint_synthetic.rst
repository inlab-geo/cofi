
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/generated/scripts_synth_data/sw_rf_joint_synthetic.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_generated_scripts_synth_data_sw_rf_joint_synthetic.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_generated_scripts_synth_data_sw_rf_joint_synthetic.py:


Surface wave and receiver function - joint inversion (synthetic data)
=====================================================================

.. GENERATED FROM PYTHON SOURCE LINES 9-14

|Open In Colab|

.. |Open In Colab| image:: https://img.shields.io/badge/open%20in-Colab-b5e2fa?logo=googlecolab&style=flat-square&color=ffd670
   :target: https://colab.research.google.com/github/inlab-geo/cofi-examples/blob/main/examples/sw_rf_joint/sw_rf_joint_synthetic.ipynb


.. GENERATED FROM PYTHON SOURCE LINES 17-24

If you are running this notebook locally, make sure you’ve followed
`steps
here <https://github.com/inlab-geo/cofi-examples#run-the-examples-with-cofi-locally>`__
to set up the environment. (This
`environment.yml <https://github.com/inlab-geo/cofi-examples/blob/main/envs/environment.yml>`__
file specifies a list of packages required to run the notebooks)


.. GENERATED FROM PYTHON SOURCE LINES 27-43

--------------

What we do in this notebook
---------------------------

Here we extend the example where CoFI has been used for the inversion of
Rayleigh wave phase velocities for a 1D layered earth to a joint
inversion where we also account for receiver functions.

**Learning outcomes**

-  A demonstration of CoFI’s ability to switch between parameter
   estimation and ensemble methods.
-  An application of CoFI for a joint inversion, here of Rayleigh wave
   pahse velocity and receiver function data, to a synthetic dataset


.. GENERATED FROM PYTHON SOURCE LINES 46-55

Utilities preparation
---------------------

In this example, we look at a joint inversion problem of surface wave
and receiver function.

We use ``pysurf96`` for computing the forward step of surface wave, and
use ``espresso`` for receiver function calculations.


.. GENERATED FROM PYTHON SOURCE LINES 55-67

.. code-block:: Python


    # -------------------------------------------------------- #
    #                                                          #
    #     Uncomment below to set up environment on "colab"     #
    #                                                          #
    # -------------------------------------------------------- #

    # !pip install -U cofi 
    # !pip install git+https://github.com/miili/pysurf96.git
    # !git clone https://github.com/inlab-geo/cofi-examples.git
    # %cd cofi-examples/examples/sw_rf_joint








.. GENERATED FROM PYTHON SOURCE LINES 69-81

.. code-block:: Python


    import glob
    import numpy as np
    import scipy
    import matplotlib.pyplot as plt
    import matplotlib.gridspec as gridspec

    import pysurf96
    import bayesbay
    import cofi
    import espresso








.. GENERATED FROM PYTHON SOURCE LINES 83-86

.. code-block:: Python


    np.seterr(all="ignore");





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    {'divide': 'ignore', 'over': 'ignore', 'under': 'ignore', 'invalid': 'ignore'}



.. GENERATED FROM PYTHON SOURCE LINES 91-93

**Model vector**


.. GENERATED FROM PYTHON SOURCE LINES 93-102

.. code-block:: Python


    # display theory on the 1D model parameterisation
    from IPython.display import display, Markdown

    with open("../../theory/misc_1d_model_parameterisation.md", "r") as f:
        content = f.read()

    display(Markdown(content))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    <IPython.core.display.Markdown object>




.. GENERATED FROM PYTHON SOURCE LINES 104-117

.. code-block:: Python


    # layercake model utilities
    def form_layercake_model(thicknesses, vs):
        model = np.zeros((len(vs)*2-1,))
        model[1::2] = thicknesses
        model[::2] = vs
        return model

    def split_layercake_model(model):
        thicknesses = model[1::2]
        vs = model[::2]
        return thicknesses, vs








.. GENERATED FROM PYTHON SOURCE LINES 119-129

.. code-block:: Python


    # voronoi model utilities
    def form_voronoi_model(voronoi_sites, vs):
        return np.hstack((vs, voronoi_sites))

    def split_voronoi_model(model):
        voronoi_sites = model[len(model)//2:]
        vs = model[:len(model)//2]
        return voronoi_sites, vs








.. GENERATED FROM PYTHON SOURCE LINES 131-154

.. code-block:: Python


    def voronoi_to_layercake(voronoi_vector: np.ndarray) -> np.ndarray:
        n_layers = len(voronoi_vector) // 2
        velocities = voronoi_vector[:n_layers]
        voronoi_sites = voronoi_vector[n_layers:]
        depths = (voronoi_sites[:-1] + voronoi_sites[1:]) / 2
        thicknesses = depths - np.insert(depths[:-1], 0, 0)
        layercake_vector = np.zeros((2*n_layers-1,))
        layercake_vector[::2] = velocities
        layercake_vector[1::2] = thicknesses
        return layercake_vector

    def layercake_to_voronoi(layercake_vector: np.ndarray, first_voronoi_site: float = 0.0) -> np.ndarray:
        n_layers = len(layercake_vector) // 2 + 1
        thicknesses = layercake_vector[1::2]
        velocities = layercake_vector[::2]
        depths = np.cumsum(thicknesses)
        voronoi_sites = np.zeros((n_layers,))
        for i in range(1,len(voronoi_sites)):
            voronoi_sites[i] = 2 * depths[i-1] - voronoi_sites[i-1]
        voronoi_vector = np.hstack((velocities, voronoi_sites))
        return voronoi_vector








.. GENERATED FROM PYTHON SOURCE LINES 159-161

**Interfacing to pysurf96**


.. GENERATED FROM PYTHON SOURCE LINES 161-168

.. code-block:: Python


    # display theory on the using the forward solver
    with open("../../theory/geo_surface_wave_dispersion2.md", "r") as f:
        content = f.read()

    display(Markdown(content))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    <IPython.core.display.Markdown object>




.. GENERATED FROM PYTHON SOURCE LINES 170-176

.. code-block:: Python


    VP_VS = 1.77
    RHO_VP_K = 0.32
    RHO_VP_B = 0.77
    periods = np.geomspace(3, 80, 20)








.. GENERATED FROM PYTHON SOURCE LINES 178-197

.. code-block:: Python


    # forward through pysurf96
    def forward_sw(model, periods):
        thicknesses, vs = split_layercake_model(model)
        thicknesses = np.append(thicknesses, 10)
        vp = vs * VP_VS
        rho = RHO_VP_K * vp + RHO_VP_B
        return pysurf96.surf96(
            thicknesses,
            vp,
            vs,
            rho,
            periods,
            wave="rayleigh",
            mode=1,
            velocity="phase",
            flat_earth=False,
        )








.. GENERATED FROM PYTHON SOURCE LINES 202-204

**Interfacing to Espresso**


.. GENERATED FROM PYTHON SOURCE LINES 204-208

.. code-block:: Python


    # obtain the receiver function library
    rf_lib = espresso.ReceiverFunctionInversionKnt().rf








.. GENERATED FROM PYTHON SOURCE LINES 210-217

.. code-block:: Python


    t_shift = 5
    t_duration = 25
    t_sampling_interval = 0.1
    gauss = 1
    ray_param_s_km = 0.07








.. GENERATED FROM PYTHON SOURCE LINES 219-239

.. code-block:: Python


    # forward through rf in espresso
    def forward_rf(
        model, 
        t_shift=t_shift, 
        t_duration=t_duration, 
        t_sampling_interval=t_sampling_interval, 
        gauss=gauss, 
        ray_param_s_km=ray_param_s_km,
        return_times=False
    ):
        h, vs = split_layercake_model(model)
        data = rf_lib.rf_calc(ps=0, thik=h, beta=vs, kapa=np.ones((len(vs),))*VP_VS, p=ray_param_s_km, 
                          duration=t_duration, dt=t_sampling_interval, shft=t_shift, gauss=gauss)
        if return_times:
            times = np.arange(len(data)) * t_sampling_interval - t_shift
            return data, times
        else:
            return data








.. GENERATED FROM PYTHON SOURCE LINES 244-246

**Numerical Jacobian**


.. GENERATED FROM PYTHON SOURCE LINES 246-259

.. code-block:: Python


    def jacobian(model, data_length, fwd, fwd_kwargs, relative_step=0.01):
        jac = np.zeros((data_length, len(model)))
        original_dpred = fwd(model, **fwd_kwargs)
        for i in range(len(model)):
            perturbed_model = model.copy()
            step = relative_step * model[i]
            perturbed_model[i] += step
            perturbed_dpred = fwd(perturbed_model, **fwd_kwargs)
            derivative = (perturbed_dpred - original_dpred) / step
            jac[:, i] = derivative
        return jac








.. GENERATED FROM PYTHON SOURCE LINES 264-266

**Plotting**


.. GENERATED FROM PYTHON SOURCE LINES 266-291

.. code-block:: Python


    def plot_model(model, ax=None, title="model", **kwargs):
        # process data
        thicknesses = np.append(model[1::2], max(model[1::2]))
        velocities = model[::2]
        y = np.insert(np.cumsum(thicknesses), 0, 0)
        x = np.insert(velocities, 0, velocities[0])
    
        # plot depth profile
        if ax is None:
            _, ax = plt.subplots()
        plotting_style = {
            "linewidth": kwargs.pop("linewidth", kwargs.pop("lw", 0.5)),
            "alpha": 0.2,
            "color": kwargs.pop("color", kwargs.pop("c", "blue")),
        }
        plotting_style.update(kwargs)
        ax.step(x, y, where="post", **plotting_style)
        if ax.get_ylim()[0] < ax.get_ylim()[1]:
            ax.invert_yaxis()
        ax.set_xlabel("Vs (km/s)")
        ax.set_ylabel("Depth (km)")
        ax.set_title(title)
        return ax








.. GENERATED FROM PYTHON SOURCE LINES 293-313

.. code-block:: Python


    def plot_data(x, y, ax=None, scatter=False, xlabel=None, ylabel=None, 
                  title="surface wave data", **kwargs):
        if ax is None:
            _, ax = plt.subplots()
        plotting_style = {
            "linewidth": kwargs.pop("linewidth", kwargs.pop("lw", 1)),
            "alpha": 1,
            "color": kwargs.pop("color", kwargs.pop("c", "blue")),
        }
        plotting_style.update(**kwargs)
        if scatter:
            ax.scatter(x, y, **plotting_style)
        else:
            ax.plot(x, y, **plotting_style)
        ax.set_xlabel(xlabel)
        ax.set_ylabel(ylabel)
        ax.set_title(title)
        return ax








.. GENERATED FROM PYTHON SOURCE LINES 315-338

.. code-block:: Python


    def plot_sw_data(rayleigh_phase_velocities, periods, ax=None, scatter=False, 
                     title="surface wave data", **kwargs):
        return plot_data(x=periods, 
                         y=rayleigh_phase_velocities, 
                         ax=ax, 
                         scatter=scatter, 
                         title=title, 
                         xlabel="Periods (s)", 
                         ylabel="Rayleigh phase velocities (km/s)", 
                         **kwargs)

    def plot_rf_data(rf_data, rf_times, ax=None, scatter=False,
                     title="receiver function data", **kwargs):
        return plot_data(x=rf_times, 
                         y=rf_data, 
                         ax=ax, 
                         scatter=scatter, 
                         title=title, 
                         xlabel="Times (s)", 
                         ylabel="Receiver function amplitudes", 
                         **kwargs)








.. GENERATED FROM PYTHON SOURCE LINES 343-346

Generate synthetic data
-----------------------


.. GENERATED FROM PYTHON SOURCE LINES 346-352

.. code-block:: Python


    true_thickness = np.array([10, 10, 15, 20, 20, 20, 20, 20])
    true_voronoi_positions = np.array([5, 15, 25, 45, 65, 85, 105, 125, 145])
    true_vs = np.array([3.38, 3.44, 3.66, 4.25, 4.35, 4.32, 4.315, 4.38, 4.5])
    true_model = form_layercake_model(true_thickness, true_vs)








.. GENERATED FROM PYTHON SOURCE LINES 354-358

.. code-block:: Python


    RAYLEIGH_STD = 0.02
    RF_STD = 0.015








.. GENERATED FROM PYTHON SOURCE LINES 360-367

.. code-block:: Python


    rayleigh = forward_sw(true_model, periods)
    rayleigh_dobs = rayleigh + np.random.normal(0, RAYLEIGH_STD, rayleigh.size)

    rf, rf_times = forward_rf(true_model, return_times=True)
    rf_dobs = rf + np.random.normal(0, RF_STD, rf.size)








.. GENERATED FROM PYTHON SOURCE LINES 369-394

.. code-block:: Python


    _, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(12,4), gridspec_kw={'width_ratios': [1, 2.5, 2.5]})

    # plot true model
    plot_model(true_model, ax=ax1, alpha=1, color="r", label="true model")
    ax1.grid()

    # plot surface wave data
    plot_sw_data(rayleigh, periods, ax=ax2, color="orange", label="true rayleigh data (noiseless)")
    plot_sw_data(rayleigh_dobs, periods, ax=ax2, scatter=True, color="brown", s=4, 
              label="observed rayleigh data (noisy)")
    ax2.grid()

    # plot receiver function data
    plot_rf_data(rf, rf_times, ax=ax3, color="lightblue", label="true receiver function data (noiseless)")
    plot_rf_data(rf_dobs, rf_times, ax=ax3, scatter=True, color="darkblue", s=2, 
              label="observed receiver function data (noisy)")
    ax3.grid()

    ax1.legend(loc="lower center", bbox_to_anchor=(0.5, -0.4))
    ax2.legend(loc="lower center", bbox_to_anchor=(0.5, -0.5))
    ax3.legend(loc="lower center", bbox_to_anchor=(0.5, -0.5))

    plt.tight_layout()




.. image-sg:: /examples/generated/scripts_synth_data/images/sphx_glr_sw_rf_joint_synthetic_001.png
   :alt: model, surface wave data, receiver function data
   :srcset: /examples/generated/scripts_synth_data/images/sphx_glr_sw_rf_joint_synthetic_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 399-402

Optimisation
------------


.. GENERATED FROM PYTHON SOURCE LINES 405-407

**Prepare ``BaseProblem`` for optimisation**


.. GENERATED FROM PYTHON SOURCE LINES 407-414

.. code-block:: Python


    n_dims = 17

    init_thicknesses = np.ones((n_dims//2,)) * 15
    init_vs = np.ones((n_dims//2+1,)) * 4.0
    init_model = form_layercake_model(init_thicknesses, init_vs)








.. GENERATED FROM PYTHON SOURCE LINES 416-444

.. code-block:: Python


    _, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(12,4), gridspec_kw={'width_ratios': [1, 2.5, 2.5]})

    # plot true model
    plot_model(init_model, ax=ax1, alpha=1, color="purple", label="starting model")
    plot_model(true_model, ax=ax1, alpha=1, color="r", label="true model")
    ax1.grid()

    # plot surface wave data
    plot_sw_data(forward_sw(init_model, periods), periods, ax=ax2, color="purple",
                 label="predicted rayleigh data from starting model")
    plot_sw_data(rayleigh_dobs, periods, ax=ax2, scatter=True, color="orange", s=4, 
              label="observed rayleigh data (noisy)")
    ax2.grid()

    # plot receiver function data
    plot_rf_data(forward_rf(init_model), rf_times, ax=ax3, color="purple",
                 label="predicted receiver function data from starting model")
    plot_rf_data(rf_dobs, rf_times, ax=ax3, scatter=True, color="darkblue", s=2, 
              label="observed receiver function data (noisy)")
    ax3.grid()

    ax1.legend(loc="lower center", bbox_to_anchor=(0.5, -0.5))
    ax2.legend(loc="lower center", bbox_to_anchor=(0.5, -0.5))
    ax3.legend(loc="lower center", bbox_to_anchor=(0.5, -0.5))

    plt.tight_layout()




.. image-sg:: /examples/generated/scripts_synth_data/images/sphx_glr_sw_rf_joint_synthetic_002.png
   :alt: model, surface wave data, receiver function data
   :srcset: /examples/generated/scripts_synth_data/images/sphx_glr_sw_rf_joint_synthetic_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 446-453

.. code-block:: Python


    my_reg = cofi.utils.QuadraticReg(
        weighting_matrix="damping", 
        model_shape=(n_dims,),
        reference_model=init_model
    )








.. GENERATED FROM PYTHON SOURCE LINES 455-481

.. code-block:: Python


    def my_objective(model, fwd_funcs, d_obs_list, lamda=1.0):
        data_misfit = 0
        for (fwd, fwd_kwargs), d_obs in zip(fwd_funcs, d_obs_list):
            d_pred = fwd(model, **fwd_kwargs)
            data_misfit += np.sum((d_obs - d_pred) ** 2)
        reg = my_reg(model)
        return data_misfit + lamda * reg

    def my_objective_gradient(model, fwd_funcs, d_obs_list, lamda=1.0):
        data_misfit_grad = 0
        for (fwd, fwd_kwargs), d_obs in zip(fwd_funcs, d_obs_list):
            d_pred = fwd(model, **fwd_kwargs)
            jac = jacobian(model, len(d_obs), fwd, fwd_kwargs)
            data_misfit_grad += -2 * jac.T @ (d_obs - d_pred)
        reg_grad = my_reg.gradient(model)
        return data_misfit_grad + lamda * reg_grad

    def my_objective_hessian(model, fwd_funcs, d_obs_list, lamda=1.0):
        data_misfit_hess = 0
        for (fwd, fwd_kwargs), d_obs in zip(fwd_funcs, d_obs_list):
            jac = jacobian(model, len(d_obs), fwd, fwd_kwargs)
            data_misfit_hess += 2 * jac.T @ jac
        reg_hess = my_reg.hessian(model)
        return data_misfit_hess + lamda * reg_hess








.. GENERATED FROM PYTHON SOURCE LINES 483-497

.. code-block:: Python


    fwd_funcs = [
        (forward_sw, {"periods": periods}), 
        (forward_rf, {
            "t_shift": t_shift, 
            "t_duration": t_duration, 
            "t_sampling_interval": t_sampling_interval, 
            "gauss": gauss, 
            "ray_param_s_km": ray_param_s_km
        })
    ]

    d_obs_list = [rayleigh_dobs, rf_dobs]








.. GENERATED FROM PYTHON SOURCE LINES 502-505

Optimisation with no damping
~~~~~~~~~~~~~~~~~~~~~~~~~~~~


.. GENERATED FROM PYTHON SOURCE LINES 505-519

.. code-block:: Python


    lamda = 0

    kwargs = {
        "fwd_funcs": fwd_funcs, 
        "d_obs_list": d_obs_list, 
        "lamda": lamda
    }
    joint_problem_no_reg = cofi.BaseProblem()
    joint_problem_no_reg.set_objective(my_objective, kwargs=kwargs)
    joint_problem_no_reg.set_gradient(my_objective_gradient, kwargs=kwargs)
    joint_problem_no_reg.set_hessian(my_objective_hessian, kwargs=kwargs)
    joint_problem_no_reg.set_initial_model(init_model)








.. GENERATED FROM PYTHON SOURCE LINES 524-526

**Define ``InversionOptions``**


.. GENERATED FROM PYTHON SOURCE LINES 526-531

.. code-block:: Python


    inv_options_optimiser = cofi.InversionOptions()
    inv_options_optimiser.set_tool("scipy.optimize.minimize")
    inv_options_optimiser.set_params(method="trust-exact")








.. GENERATED FROM PYTHON SOURCE LINES 536-538

**Define ``Inversion`` and run**


.. GENERATED FROM PYTHON SOURCE LINES 538-542

.. code-block:: Python


    inv_optimiser_no_reg = cofi.Inversion(joint_problem_no_reg, inv_options_optimiser)
    inv_res_optimiser_no_reg = inv_optimiser_no_reg.run()








.. GENERATED FROM PYTHON SOURCE LINES 547-549

**Plot results**


.. GENERATED FROM PYTHON SOURCE LINES 549-580

.. code-block:: Python


    _, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(12,4), gridspec_kw={'width_ratios': [1, 2.5, 2.5]})

    # plot true model
    plot_model(inv_res_optimiser_no_reg.model, ax=ax1, alpha=1, color="purple", 
               label="inverted model")
    plot_model(true_model, ax=ax1, alpha=1, color="r", label="true model")
    ax1.grid()

    # plot surface wave data
    plot_sw_data(forward_sw(inv_res_optimiser_no_reg.model, periods), 
                 periods, ax=ax2, color="purple",
                 label="predicted rayleigh data from inverted model")
    plot_sw_data(rayleigh_dobs, periods, ax=ax2, scatter=True, color="orange", s=4, 
              label="observed rayleigh data (noisy)")
    ax2.grid()

    # plot receiver function data
    plot_rf_data(forward_rf(inv_res_optimiser_no_reg.model), rf_times, 
                 ax=ax3, color="purple",
                 label="predicted receiver function data from inverted model")
    plot_rf_data(rf_dobs, rf_times, ax=ax3, scatter=True, color="darkblue", s=2, 
              label="observed receiver function data (noisy)")
    ax3.grid()

    ax1.legend(loc="lower center", bbox_to_anchor=(0.5, -0.5))
    ax2.legend(loc="lower center", bbox_to_anchor=(0.5, -0.5))
    ax3.legend(loc="lower center", bbox_to_anchor=(0.5, -0.5))

    plt.tight_layout()




.. image-sg:: /examples/generated/scripts_synth_data/images/sphx_glr_sw_rf_joint_synthetic_003.png
   :alt: model, surface wave data, receiver function data
   :srcset: /examples/generated/scripts_synth_data/images/sphx_glr_sw_rf_joint_synthetic_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 585-596

Optimal damping
~~~~~~~~~~~~~~~

Oh no! The inverted model doesn’t look good, and it even has negative
thicknesses.

Maybe adding a damping term to our objective function would help… but
how can we determine a good damping factor?

The ``InversionPool`` in CoFI can help you answer it.


.. GENERATED FROM PYTHON SOURCE LINES 596-633

.. code-block:: Python


    lambdas = np.logspace(-6, 6, 15)

    my_lcurve_problems = []
    for lamb in lambdas:
        my_problem = cofi.BaseProblem()
        kwargs = {
            "fwd_funcs": fwd_funcs, 
            "d_obs_list": d_obs_list, 
            "lamda": lamb
        }
        my_problem.set_objective(my_objective, kwargs=kwargs)
        my_problem.set_gradient(my_objective_gradient, kwargs=kwargs)
        my_problem.set_hessian(my_objective_hessian, kwargs=kwargs)
        my_problem.set_initial_model(init_model)
        my_lcurve_problems.append(my_problem)

    def my_callback(inv_result, i):
        m = inv_result.model
        res_norm = 0
        for (fwd, fwd_kwargs), d_obs in zip(fwd_funcs, d_obs_list):
            d_pred = fwd(m, **fwd_kwargs)
            res_norm += np.sum((d_obs - d_pred) ** 2)
        reg_norm = np.sqrt(my_reg(m))
        print(f"Finished inversion with lambda={lambdas[i]}: {res_norm}, {reg_norm}")
        return res_norm, reg_norm

    my_inversion_pool = cofi.utils.InversionPool(
        list_of_inv_problems=my_lcurve_problems,
        list_of_inv_options=inv_options_optimiser,
        callback=my_callback,
        parallel=False
    )
    all_res, all_cb_returns = my_inversion_pool.run()

    l_curve_points = list(zip(*all_cb_returns))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Finished inversion with lambda=1e-06: 0.0619151925442841, 18.035890736959534
    Finished inversion with lambda=7.196856730011514e-06: 0.06228485880151733, 14.219446266866878
    Finished inversion with lambda=5.1794746792312125e-05: 0.06574952892428222, 5.210307914494557
    Finished inversion with lambda=0.0003727593720314938: 0.06638403346119788, 3.8930942466306617
    Finished inversion with lambda=0.0026826957952797246: 0.07135917746918821, 3.3011554923474784
    Finished inversion with lambda=0.019306977288832496: 0.14620633138035727, 1.493111344966268
    Finished inversion with lambda=0.1389495494373136: 0.1929454055175079, 1.0402930211052501
    Finished inversion with lambda=1.0: 0.46344963307903725, 0.6694199962695887
    Finished inversion with lambda=7.196856730011514: 1.4428214375450268, 0.31721440120256617
    Finished inversion with lambda=51.79474679231202: 2.916972476692341, 0.06987538446239473
    Finished inversion with lambda=372.7593720314938: 3.367116556291378, 0.010506505962031324
    Finished inversion with lambda=2682.6957952797275: 3.4386839186079796, 0.0014758815830745106
    Finished inversion with lambda=19306.977288832455: 3.4488194180559857, 0.00020546303196962822
    Finished inversion with lambda=138949.5494373136: 3.450252071461968, 2.8552775100782677e-05
    Finished inversion with lambda=1000000.0: 3.4504470301773424, 3.967542419097776e-06




.. GENERATED FROM PYTHON SOURCE LINES 635-639

.. code-block:: Python


    # print all the lambdas
    lambdas





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    array([1.00000000e-06, 7.19685673e-06, 5.17947468e-05, 3.72759372e-04,
           2.68269580e-03, 1.93069773e-02, 1.38949549e-01, 1.00000000e+00,
           7.19685673e+00, 5.17947468e+01, 3.72759372e+02, 2.68269580e+03,
           1.93069773e+04, 1.38949549e+05, 1.00000000e+06])



.. GENERATED FROM PYTHON SOURCE LINES 644-646

**Plot L-curve**


.. GENERATED FROM PYTHON SOURCE LINES 646-655

.. code-block:: Python


    # plot the L-curve
    res_norm, reg_norm = l_curve_points
    plt.plot(reg_norm, res_norm, '.-')
    plt.xlabel(r'Norm of regularization term $||Wm||_2$')
    plt.ylabel(r'Norm of residual $||g(m)-d||_2$')
    for i in range(0, len(lambdas), 2):
        plt.annotate(f'{lambdas[i]:.1e}', (reg_norm[i], res_norm[i]), fontsize=8)




.. image-sg:: /examples/generated/scripts_synth_data/images/sphx_glr_sw_rf_joint_synthetic_004.png
   :alt: sw rf joint synthetic
   :srcset: /examples/generated/scripts_synth_data/images/sphx_glr_sw_rf_joint_synthetic_004.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 660-663

Optimisation with damping
~~~~~~~~~~~~~~~~~~~~~~~~~


.. GENERATED FROM PYTHON SOURCE LINES 666-669

From the L-curve plot above, it seems that a damping factor of around
0.14 would be good.


.. GENERATED FROM PYTHON SOURCE LINES 669-683

.. code-block:: Python


    lamda = 0.14

    kwargs = {
        "fwd_funcs": fwd_funcs, 
        "d_obs_list": d_obs_list, 
        "lamda": lamda
    }
    joint_problem = cofi.BaseProblem()
    joint_problem.set_objective(my_objective, kwargs=kwargs)
    joint_problem.set_gradient(my_objective_gradient, kwargs=kwargs)
    joint_problem.set_hessian(my_objective_hessian, kwargs=kwargs)
    joint_problem.set_initial_model(init_model)








.. GENERATED FROM PYTHON SOURCE LINES 688-690

**Define ``Inversion`` and run**


.. GENERATED FROM PYTHON SOURCE LINES 690-694

.. code-block:: Python


    inv_optimiser = cofi.Inversion(joint_problem, inv_options_optimiser)
    inv_res_optimiser = inv_optimiser.run()








.. GENERATED FROM PYTHON SOURCE LINES 699-701

**Plot results**


.. GENERATED FROM PYTHON SOURCE LINES 701-732

.. code-block:: Python


    _, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(12,4), gridspec_kw={'width_ratios': [1, 2.5, 2.5]})

    # plot true model
    plot_model(inv_res_optimiser.model, ax=ax1, alpha=1, color="purple", 
               label="inverted model")
    plot_model(true_model, ax=ax1, alpha=1, color="r", label="true model")
    ax1.grid()

    # plot surface wave data
    plot_sw_data(forward_sw(inv_res_optimiser_no_reg.model, periods), 
                 periods, ax=ax2, color="purple",
                 label="predicted rayleigh data from inverted model")
    plot_sw_data(rayleigh_dobs, periods, ax=ax2, scatter=True, color="orange", s=4, 
              label="observed rayleigh data (noisy)")
    ax2.grid()

    # plot receiver function data
    plot_rf_data(forward_rf(inv_res_optimiser.model), rf_times, 
                 ax=ax3, color="purple",
                 label="predicted receiver function data from inverted model")
    plot_rf_data(rf_dobs, rf_times, ax=ax3, scatter=True, color="darkblue", s=2, 
              label="observed receiver function data (noisy)")
    ax3.grid()

    ax1.legend(loc="lower center", bbox_to_anchor=(0.5, -0.5))
    ax2.legend(loc="lower center", bbox_to_anchor=(0.5, -0.5))
    ax3.legend(loc="lower center", bbox_to_anchor=(0.5, -0.5))

    plt.tight_layout()




.. image-sg:: /examples/generated/scripts_synth_data/images/sphx_glr_sw_rf_joint_synthetic_005.png
   :alt: model, surface wave data, receiver function data
   :srcset: /examples/generated/scripts_synth_data/images/sphx_glr_sw_rf_joint_synthetic_005.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 737-740

Fixed-dimensional sampling
--------------------------


.. GENERATED FROM PYTHON SOURCE LINES 743-745

**Prepare ``BaseProblem`` for fixed-dimensional sampling**


.. GENERATED FROM PYTHON SOURCE LINES 745-761

.. code-block:: Python


    thick_min = 5
    thick_max = 30
    vs_min = 2
    vs_max = 5

    def my_log_prior(model):
        thicknesses, vs = split_layercake_model(model)
        thicknesses_out_of_bounds = (thicknesses < thick_min) | (thicknesses > thick_max)
        vs_out_of_bounds = (vs < vs_min) | (vs > vs_max)
        if np.any(thicknesses_out_of_bounds) or np.any(vs_out_of_bounds):
            return float("-inf")
        log_prior = - np.log(thick_max - thick_min) * len(thicknesses) \
                    - np.log(vs_max - vs_min) * len(vs)
        return log_prior








.. GENERATED FROM PYTHON SOURCE LINES 763-785

.. code-block:: Python


    # inverse data covariance matrix
    Cdinv_rayleigh = np.eye(len(rayleigh_dobs)) / (RAYLEIGH_STD**2)
    Cdinv_rf = np.eye(len(rf_dobs)) / (RF_STD**2)
    Cdinv_list = [Cdinv_rayleigh, Cdinv_rf]

    def my_log_likelihood(
        model, 
        fwd_funcs=fwd_funcs, 
        d_obs_list=d_obs_list, 
        Cdinv_list=Cdinv_list
    ):
        log_like_sum = 0
        for (fwd, fwd_kwargs), d_obs, Cdinv in zip(fwd_funcs, d_obs_list, Cdinv_list):
            try:
                d_pred = fwd(model, **fwd_kwargs)
            except:
                return float("-inf")
            residual = d_obs - d_pred
            log_like_sum += -0.5 * residual @ (Cdinv @ residual).T
        return log_like_sum








.. GENERATED FROM PYTHON SOURCE LINES 787-794

.. code-block:: Python


    n_walkers = 40

    my_walkers_start = np.ones((n_walkers, n_dims)) * inv_res_optimiser.model
    for i in range(n_walkers):
        my_walkers_start[i,:] += np.random.normal(0, 0.5, n_dims)








.. GENERATED FROM PYTHON SOURCE LINES 796-800

.. code-block:: Python


    joint_problem.set_log_prior(my_log_prior)
    joint_problem.set_log_likelihood(my_log_likelihood)








.. GENERATED FROM PYTHON SOURCE LINES 805-807

**Define ``InversionOptions``**


.. GENERATED FROM PYTHON SOURCE LINES 807-818

.. code-block:: Python


    inv_options_fixed_d_sampling = cofi.InversionOptions()
    inv_options_fixed_d_sampling.set_tool("emcee")
    inv_options_fixed_d_sampling.set_params(
        nwalkers=n_walkers, 
        nsteps=2_000, 
        initial_state=my_walkers_start, 
        skip_initial_state_check=True, 
        progress=True
    )








.. GENERATED FROM PYTHON SOURCE LINES 823-825

**Define ``Inversion`` and run**


.. GENERATED FROM PYTHON SOURCE LINES 828-831

Sample the prior
~~~~~~~~~~~~~~~~


.. GENERATED FROM PYTHON SOURCE LINES 831-838

.. code-block:: Python


    prior_sampling_problem = cofi.BaseProblem()
    prior_sampling_problem.set_log_posterior(my_log_prior)
    prior_sampling_problem.set_model_shape(init_model.shape)
    prior_sampler = cofi.Inversion(prior_sampling_problem, inv_options_fixed_d_sampling)
    prior_results = prior_sampler.run()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|          | 0/2000 [00:00<?, ?it/s]      6%|▌         | 111/2000 [00:00<00:01, 1101.34it/s]     11%|█         | 222/2000 [00:00<00:01, 1089.53it/s]     17%|█▋        | 333/2000 [00:00<00:01, 1096.71it/s]     22%|██▏       | 443/2000 [00:00<00:01, 1096.12it/s]     28%|██▊       | 553/2000 [00:00<00:01, 1096.40it/s]     33%|███▎      | 663/2000 [00:00<00:01, 1096.63it/s]     39%|███▊      | 774/2000 [00:00<00:01, 1098.19it/s]     44%|████▍     | 886/2000 [00:00<00:01, 1102.05it/s]     50%|████▉     | 998/2000 [00:00<00:00, 1106.37it/s]     56%|█████▌    | 1110/2000 [00:01<00:00, 1108.71it/s]     61%|██████    | 1222/2000 [00:01<00:00, 1111.33it/s]     67%|██████▋   | 1334/2000 [00:01<00:00, 1111.05it/s]     72%|███████▏  | 1446/2000 [00:01<00:00, 1098.31it/s]     78%|███████▊  | 1557/2000 [00:01<00:00, 1101.54it/s]     84%|████████▎ | 1672/2000 [00:01<00:00, 1115.47it/s]     89%|████████▉ | 1788/2000 [00:01<00:00, 1126.39it/s]     95%|█████████▌| 1903/2000 [00:01<00:00, 1132.43it/s]    100%|██████████| 2000/2000 [00:01<00:00, 1111.99it/s]




.. GENERATED FROM PYTHON SOURCE LINES 840-862

.. code-block:: Python


    import arviz as az

    labels = ["v0", "t0", "v1", "t1", "v2", "t2", "v3", "t3", "v4", "t4", "v5", "t5", "v6", "t6", "v7", "t7", "v8"]

    prior_results_sampler = prior_results.sampler
    az_idata_prior = az.from_emcee(prior_results_sampler, var_names=labels)

    axes = az.plot_trace(
        az_idata_prior, 
        backend_kwargs={"constrained_layout":True}, 
        figsize=(10,20),
    )

    for i, axes_pair in enumerate(axes):
        ax1 = axes_pair[0]
        ax2 = axes_pair[1]
        ax1.set_xlabel("parameter value")
        ax1.set_ylabel("density value")
        ax2.set_xlabel("number of iterations")
        ax2.set_ylabel("parameter value")




.. image-sg:: /examples/generated/scripts_synth_data/images/sphx_glr_sw_rf_joint_synthetic_006.png
   :alt: v0, v0, t0, t0, v1, v1, t1, t1, v2, v2, t2, t2, v3, v3, t3, t3, v4, v4, t4, t4, v5, v5, t5, t5, v6, v6, t6, t6, v7, v7, t7, t7, v8, v8
   :srcset: /examples/generated/scripts_synth_data/images/sphx_glr_sw_rf_joint_synthetic_006.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 867-870

Sample the posterior
~~~~~~~~~~~~~~~~~~~~


.. GENERATED FROM PYTHON SOURCE LINES 870-874

.. code-block:: Python


    inversion_fixed_d_sampler = cofi.Inversion(joint_problem, inv_options_fixed_d_sampling)
    inv_result_fixed_d_sampler = inversion_fixed_d_sampler.run()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|          | 0/2000 [00:00<?, ?it/s]      0%|          | 3/2000 [00:00<01:17, 25.88it/s]      0%|          | 6/2000 [00:00<01:30, 22.15it/s]      0%|          | 9/2000 [00:00<01:42, 19.45it/s]      1%|          | 11/2000 [00:00<01:45, 18.86it/s]      1%|          | 13/2000 [00:00<01:55, 17.27it/s]      1%|          | 15/2000 [00:00<02:03, 16.06it/s]      1%|          | 17/2000 [00:00<02:09, 15.31it/s]      1%|          | 19/2000 [00:01<02:14, 14.78it/s]      1%|          | 21/2000 [00:01<02:18, 14.26it/s]      1%|          | 23/2000 [00:01<02:22, 13.85it/s]      1%|▏         | 25/2000 [00:01<02:24, 13.63it/s]      1%|▏         | 27/2000 [00:01<02:27, 13.39it/s]      1%|▏         | 29/2000 [00:01<02:28, 13.24it/s]      2%|▏         | 31/2000 [00:02<02:30, 13.08it/s]      2%|▏         | 33/2000 [00:02<02:32, 12.93it/s]      2%|▏         | 35/2000 [00:02<02:32, 12.88it/s]      2%|▏         | 37/2000 [00:02<02:33, 12.82it/s]      2%|▏         | 39/2000 [00:02<02:33, 12.74it/s]      2%|▏         | 41/2000 [00:02<02:34, 12.68it/s]      2%|▏         | 43/2000 [00:03<02:34, 12.63it/s]      2%|▏         | 45/2000 [00:03<02:35, 12.61it/s]      2%|▏         | 47/2000 [00:03<02:35, 12.59it/s]      2%|▏         | 49/2000 [00:03<02:35, 12.58it/s]      3%|▎         | 51/2000 [00:03<02:35, 12.56it/s]      3%|▎         | 53/2000 [00:03<02:35, 12.55it/s]      3%|▎         | 55/2000 [00:03<02:35, 12.54it/s]      3%|▎         | 57/2000 [00:04<02:35, 12.53it/s]      3%|▎         | 59/2000 [00:04<02:34, 12.53it/s]      3%|▎         | 61/2000 [00:04<02:34, 12.52it/s]      3%|▎         | 63/2000 [00:04<02:34, 12.52it/s]      3%|▎         | 65/2000 [00:04<02:34, 12.52it/s]      3%|▎         | 67/2000 [00:04<02:34, 12.51it/s]      3%|▎         | 69/2000 [00:05<02:34, 12.51it/s]      4%|▎         | 71/2000 [00:05<02:34, 12.51it/s]      4%|▎         | 73/2000 [00:05<02:34, 12.51it/s]      4%|▍         | 75/2000 [00:05<02:34, 12.50it/s]      4%|▍         | 77/2000 [00:05<02:33, 12.50it/s]      4%|▍         | 79/2000 [00:05<02:33, 12.49it/s]      4%|▍         | 81/2000 [00:06<02:33, 12.50it/s]      4%|▍         | 83/2000 [00:06<02:33, 12.50it/s]      4%|▍         | 85/2000 [00:06<02:33, 12.50it/s]      4%|▍         | 87/2000 [00:06<02:33, 12.50it/s]      4%|▍         | 89/2000 [00:06<02:33, 12.49it/s]      5%|▍         | 91/2000 [00:06<02:32, 12.49it/s]      5%|▍         | 93/2000 [00:07<02:32, 12.49it/s]      5%|▍         | 95/2000 [00:07<02:32, 12.49it/s]      5%|▍         | 97/2000 [00:07<02:32, 12.50it/s]      5%|▍         | 99/2000 [00:07<02:32, 12.50it/s]      5%|▌         | 101/2000 [00:07<02:31, 12.50it/s]      5%|▌         | 103/2000 [00:07<02:31, 12.49it/s]      5%|▌         | 105/2000 [00:07<02:31, 12.50it/s]      5%|▌         | 107/2000 [00:08<02:31, 12.50it/s]      5%|▌         | 109/2000 [00:08<02:31, 12.50it/s]      6%|▌         | 111/2000 [00:08<02:31, 12.50it/s]      6%|▌         | 113/2000 [00:08<02:30, 12.50it/s]      6%|▌         | 115/2000 [00:08<02:30, 12.51it/s]      6%|▌         | 117/2000 [00:08<02:30, 12.50it/s]      6%|▌         | 119/2000 [00:09<02:30, 12.50it/s]      6%|▌         | 121/2000 [00:09<02:30, 12.51it/s]      6%|▌         | 123/2000 [00:09<02:30, 12.50it/s]      6%|▋         | 125/2000 [00:09<02:30, 12.43it/s]      6%|▋         | 127/2000 [00:09<02:30, 12.45it/s]      6%|▋         | 129/2000 [00:09<02:30, 12.46it/s]      7%|▋         | 131/2000 [00:10<02:29, 12.47it/s]      7%|▋         | 133/2000 [00:10<02:29, 12.48it/s]      7%|▋         | 135/2000 [00:10<02:29, 12.47it/s]      7%|▋         | 137/2000 [00:10<02:46, 11.17it/s]      7%|▋         | 139/2000 [00:10<02:41, 11.54it/s]      7%|▋         | 141/2000 [00:10<02:37, 11.78it/s]      7%|▋         | 143/2000 [00:11<02:35, 11.92it/s]      7%|▋         | 145/2000 [00:11<02:35, 11.96it/s]      7%|▋         | 147/2000 [00:11<02:32, 12.13it/s]      7%|▋         | 149/2000 [00:11<02:31, 12.25it/s]      8%|▊         | 151/2000 [00:11<02:29, 12.34it/s]      8%|▊         | 153/2000 [00:11<02:28, 12.40it/s]      8%|▊         | 155/2000 [00:12<02:28, 12.44it/s]      8%|▊         | 157/2000 [00:12<02:28, 12.44it/s]      8%|▊         | 159/2000 [00:12<02:27, 12.48it/s]      8%|▊         | 161/2000 [00:12<02:27, 12.50it/s]      8%|▊         | 163/2000 [00:12<02:26, 12.52it/s]      8%|▊         | 165/2000 [00:12<02:26, 12.53it/s]      8%|▊         | 167/2000 [00:12<02:26, 12.54it/s]      8%|▊         | 169/2000 [00:13<02:25, 12.55it/s]      9%|▊         | 171/2000 [00:13<02:25, 12.56it/s]      9%|▊         | 173/2000 [00:13<02:25, 12.56it/s]      9%|▉         | 175/2000 [00:13<02:25, 12.56it/s]      9%|▉         | 177/2000 [00:13<02:25, 12.57it/s]      9%|▉         | 179/2000 [00:13<02:24, 12.57it/s]      9%|▉         | 181/2000 [00:14<02:24, 12.58it/s]      9%|▉         | 183/2000 [00:14<02:24, 12.56it/s]      9%|▉         | 185/2000 [00:14<02:24, 12.56it/s]      9%|▉         | 187/2000 [00:14<02:24, 12.58it/s]      9%|▉         | 189/2000 [00:14<02:23, 12.59it/s]     10%|▉         | 191/2000 [00:14<02:23, 12.60it/s]     10%|▉         | 193/2000 [00:15<02:23, 12.60it/s]     10%|▉         | 195/2000 [00:15<02:23, 12.61it/s]     10%|▉         | 197/2000 [00:15<02:22, 12.61it/s]     10%|▉         | 199/2000 [00:15<02:22, 12.62it/s]     10%|█         | 201/2000 [00:15<02:22, 12.62it/s]     10%|█         | 203/2000 [00:15<02:22, 12.62it/s]     10%|█         | 205/2000 [00:16<02:22, 12.63it/s]     10%|█         | 207/2000 [00:16<02:21, 12.63it/s]     10%|█         | 209/2000 [00:16<02:21, 12.64it/s]     11%|█         | 211/2000 [00:16<02:21, 12.64it/s]     11%|█         | 213/2000 [00:16<02:21, 12.64it/s]     11%|█         | 215/2000 [00:16<02:21, 12.65it/s]     11%|█         | 217/2000 [00:16<02:20, 12.65it/s]     11%|█         | 219/2000 [00:17<02:21, 12.61it/s]     11%|█         | 221/2000 [00:17<02:20, 12.62it/s]     11%|█         | 223/2000 [00:17<02:20, 12.63it/s]     11%|█▏        | 225/2000 [00:17<02:20, 12.64it/s]     11%|█▏        | 227/2000 [00:17<02:20, 12.64it/s]     11%|█▏        | 229/2000 [00:17<02:20, 12.64it/s]     12%|█▏        | 231/2000 [00:18<02:19, 12.64it/s]     12%|█▏        | 233/2000 [00:18<02:19, 12.65it/s]     12%|█▏        | 235/2000 [00:18<02:19, 12.66it/s]     12%|█▏        | 237/2000 [00:18<02:19, 12.65it/s]     12%|█▏        | 239/2000 [00:18<02:19, 12.65it/s]     12%|█▏        | 241/2000 [00:18<02:19, 12.65it/s]     12%|█▏        | 243/2000 [00:19<02:18, 12.66it/s]     12%|█▏        | 245/2000 [00:19<02:18, 12.66it/s]     12%|█▏        | 247/2000 [00:19<02:18, 12.62it/s]     12%|█▏        | 249/2000 [00:19<02:18, 12.64it/s]     13%|█▎        | 251/2000 [00:19<02:18, 12.60it/s]     13%|█▎        | 253/2000 [00:19<02:18, 12.61it/s]     13%|█▎        | 255/2000 [00:19<02:18, 12.63it/s]     13%|█▎        | 257/2000 [00:20<02:17, 12.64it/s]     13%|█▎        | 259/2000 [00:20<02:17, 12.69it/s]     13%|█▎        | 261/2000 [00:20<02:17, 12.68it/s]     13%|█▎        | 263/2000 [00:20<02:16, 12.68it/s]     13%|█▎        | 265/2000 [00:20<02:16, 12.67it/s]     13%|█▎        | 267/2000 [00:20<02:16, 12.68it/s]     13%|█▎        | 269/2000 [00:21<02:16, 12.68it/s]     14%|█▎        | 271/2000 [00:21<02:16, 12.68it/s]     14%|█▎        | 273/2000 [00:21<02:16, 12.68it/s]     14%|█▍        | 275/2000 [00:21<02:16, 12.68it/s]     14%|█▍        | 277/2000 [00:21<02:31, 11.37it/s]     14%|█▍        | 279/2000 [00:21<02:26, 11.77it/s]     14%|█▍        | 281/2000 [00:22<02:22, 12.06it/s]     14%|█▍        | 283/2000 [00:22<02:20, 12.24it/s]     14%|█▍        | 285/2000 [00:22<02:18, 12.42it/s]     14%|█▍        | 287/2000 [00:22<02:17, 12.50it/s]     14%|█▍        | 289/2000 [00:22<02:16, 12.56it/s]     15%|█▍        | 291/2000 [00:22<02:15, 12.60it/s]     15%|█▍        | 293/2000 [00:23<02:15, 12.63it/s]     15%|█▍        | 295/2000 [00:23<02:14, 12.66it/s]     15%|█▍        | 297/2000 [00:23<02:14, 12.67it/s]     15%|█▍        | 299/2000 [00:23<02:14, 12.68it/s]     15%|█▌        | 301/2000 [00:23<02:13, 12.68it/s]     15%|█▌        | 303/2000 [00:23<02:13, 12.69it/s]     15%|█▌        | 305/2000 [00:23<02:13, 12.68it/s]     15%|█▌        | 307/2000 [00:24<02:13, 12.70it/s]     15%|█▌        | 309/2000 [00:24<02:13, 12.70it/s]     16%|█▌        | 311/2000 [00:24<02:12, 12.70it/s]     16%|█▌        | 313/2000 [00:24<02:12, 12.70it/s]     16%|█▌        | 315/2000 [00:24<02:12, 12.70it/s]     16%|█▌        | 317/2000 [00:24<02:12, 12.71it/s]     16%|█▌        | 319/2000 [00:25<02:11, 12.75it/s]     16%|█▌        | 321/2000 [00:25<02:10, 12.88it/s]     16%|█▌        | 323/2000 [00:25<02:10, 12.87it/s]     16%|█▋        | 325/2000 [00:25<02:10, 12.86it/s]     16%|█▋        | 327/2000 [00:25<02:10, 12.82it/s]     16%|█▋        | 329/2000 [00:25<02:10, 12.78it/s]     17%|█▋        | 331/2000 [00:25<02:10, 12.75it/s]     17%|█▋        | 333/2000 [00:26<02:10, 12.77it/s]     17%|█▋        | 335/2000 [00:26<02:10, 12.75it/s]     17%|█▋        | 337/2000 [00:26<02:10, 12.77it/s]     17%|█▋        | 339/2000 [00:26<02:10, 12.77it/s]     17%|█▋        | 341/2000 [00:26<02:09, 12.83it/s]     17%|█▋        | 343/2000 [00:26<02:09, 12.84it/s]     17%|█▋        | 345/2000 [00:27<02:07, 12.93it/s]     17%|█▋        | 347/2000 [00:27<02:08, 12.86it/s]     17%|█▋        | 349/2000 [00:27<02:07, 12.94it/s]     18%|█▊        | 351/2000 [00:27<02:07, 12.91it/s]     18%|█▊        | 353/2000 [00:27<02:06, 12.97it/s]     18%|█▊        | 355/2000 [00:27<02:06, 13.03it/s]     18%|█▊        | 357/2000 [00:28<02:05, 13.11it/s]     18%|█▊        | 359/2000 [00:28<02:06, 13.02it/s]     18%|█▊        | 361/2000 [00:28<02:05, 13.01it/s]     18%|█▊        | 363/2000 [00:28<02:06, 12.96it/s]     18%|█▊        | 365/2000 [00:28<02:06, 12.92it/s]     18%|█▊        | 367/2000 [00:28<02:07, 12.84it/s]     18%|█▊        | 369/2000 [00:28<02:07, 12.84it/s]     19%|█▊        | 371/2000 [00:29<02:07, 12.78it/s]     19%|█▊        | 373/2000 [00:29<02:06, 12.84it/s]     19%|█▉        | 375/2000 [00:29<02:06, 12.83it/s]     19%|█▉        | 377/2000 [00:29<02:06, 12.83it/s]     19%|█▉        | 379/2000 [00:29<02:06, 12.82it/s]     19%|█▉        | 381/2000 [00:29<02:05, 12.94it/s]     19%|█▉        | 383/2000 [00:30<02:04, 13.04it/s]     19%|█▉        | 385/2000 [00:30<02:04, 13.00it/s]     19%|█▉        | 387/2000 [00:30<02:03, 13.08it/s]     19%|█▉        | 389/2000 [00:30<02:04, 12.93it/s]     20%|█▉        | 391/2000 [00:30<02:02, 13.13it/s]     20%|█▉        | 393/2000 [00:30<02:01, 13.17it/s]     20%|█▉        | 395/2000 [00:30<02:02, 13.14it/s]     20%|█▉        | 397/2000 [00:31<02:01, 13.23it/s]     20%|█▉        | 399/2000 [00:31<02:00, 13.30it/s]     20%|██        | 401/2000 [00:31<01:59, 13.33it/s]     20%|██        | 403/2000 [00:31<02:00, 13.26it/s]     20%|██        | 405/2000 [00:31<02:00, 13.26it/s]     20%|██        | 407/2000 [00:31<02:00, 13.26it/s]     20%|██        | 409/2000 [00:31<02:00, 13.26it/s]     21%|██        | 411/2000 [00:32<01:59, 13.34it/s]     21%|██        | 413/2000 [00:32<01:57, 13.48it/s]     21%|██        | 415/2000 [00:32<01:57, 13.47it/s]     21%|██        | 417/2000 [00:32<01:56, 13.61it/s]     21%|██        | 419/2000 [00:32<01:55, 13.66it/s]     21%|██        | 421/2000 [00:32<01:56, 13.54it/s]     21%|██        | 423/2000 [00:33<01:55, 13.71it/s]     21%|██▏       | 425/2000 [00:33<01:55, 13.62it/s]     21%|██▏       | 427/2000 [00:33<01:55, 13.61it/s]     21%|██▏       | 429/2000 [00:33<01:55, 13.65it/s]     22%|██▏       | 431/2000 [00:33<01:53, 13.79it/s]     22%|██▏       | 433/2000 [00:33<01:51, 14.00it/s]     22%|██▏       | 435/2000 [00:33<01:52, 13.92it/s]     22%|██▏       | 437/2000 [00:34<01:52, 13.92it/s]     22%|██▏       | 439/2000 [00:34<01:52, 13.82it/s]     22%|██▏       | 441/2000 [00:34<01:51, 13.97it/s]     22%|██▏       | 443/2000 [00:34<01:52, 13.84it/s]     22%|██▏       | 445/2000 [00:34<01:52, 13.87it/s]     22%|██▏       | 447/2000 [00:34<01:50, 14.00it/s]     22%|██▏       | 449/2000 [00:34<01:49, 14.15it/s]     23%|██▎       | 451/2000 [00:35<01:48, 14.25it/s]     23%|██▎       | 453/2000 [00:35<01:49, 14.15it/s]     23%|██▎       | 455/2000 [00:35<01:48, 14.19it/s]     23%|██▎       | 457/2000 [00:35<01:48, 14.28it/s]     23%|██▎       | 459/2000 [00:35<01:47, 14.29it/s]     23%|██▎       | 461/2000 [00:35<01:49, 14.11it/s]     23%|██▎       | 463/2000 [00:35<01:47, 14.34it/s]     23%|██▎       | 465/2000 [00:35<01:46, 14.44it/s]     23%|██▎       | 467/2000 [00:36<01:46, 14.34it/s]     23%|██▎       | 469/2000 [00:36<01:49, 13.98it/s]     24%|██▎       | 471/2000 [00:36<01:49, 14.01it/s]     24%|██▎       | 473/2000 [00:36<01:49, 13.93it/s]     24%|██▍       | 475/2000 [00:36<01:48, 14.01it/s]     24%|██▍       | 477/2000 [00:36<01:48, 14.03it/s]     24%|██▍       | 479/2000 [00:37<01:49, 13.93it/s]     24%|██▍       | 481/2000 [00:37<01:49, 13.81it/s]     24%|██▍       | 483/2000 [00:37<01:49, 13.89it/s]     24%|██▍       | 485/2000 [00:37<01:46, 14.22it/s]     24%|██▍       | 487/2000 [00:37<01:45, 14.35it/s]     24%|██▍       | 489/2000 [00:37<01:45, 14.38it/s]     25%|██▍       | 491/2000 [00:37<01:45, 14.34it/s]     25%|██▍       | 493/2000 [00:37<01:44, 14.44it/s]     25%|██▍       | 495/2000 [00:38<01:45, 14.27it/s]     25%|██▍       | 497/2000 [00:38<01:43, 14.50it/s]     25%|██▍       | 499/2000 [00:38<01:44, 14.30it/s]     25%|██▌       | 501/2000 [00:38<01:45, 14.23it/s]     25%|██▌       | 503/2000 [00:38<01:45, 14.24it/s]     25%|██▌       | 505/2000 [00:38<01:43, 14.43it/s]     25%|██▌       | 507/2000 [00:38<01:43, 14.37it/s]     25%|██▌       | 509/2000 [00:39<01:44, 14.32it/s]     26%|██▌       | 511/2000 [00:39<01:45, 14.13it/s]     26%|██▌       | 513/2000 [00:39<01:43, 14.40it/s]     26%|██▌       | 515/2000 [00:39<01:44, 14.15it/s]     26%|██▌       | 517/2000 [00:39<01:43, 14.29it/s]     26%|██▌       | 519/2000 [00:39<01:43, 14.34it/s]     26%|██▌       | 521/2000 [00:39<01:43, 14.31it/s]     26%|██▌       | 523/2000 [00:40<01:44, 14.12it/s]     26%|██▋       | 525/2000 [00:40<01:45, 13.99it/s]     26%|██▋       | 527/2000 [00:40<01:46, 13.89it/s]     26%|██▋       | 529/2000 [00:40<01:45, 13.99it/s]     27%|██▋       | 531/2000 [00:40<01:43, 14.18it/s]     27%|██▋       | 533/2000 [00:40<01:42, 14.26it/s]     27%|██▋       | 535/2000 [00:40<01:43, 14.18it/s]     27%|██▋       | 537/2000 [00:41<01:45, 13.91it/s]     27%|██▋       | 539/2000 [00:41<01:44, 13.95it/s]     27%|██▋       | 541/2000 [00:41<01:46, 13.73it/s]     27%|██▋       | 543/2000 [00:41<01:44, 13.99it/s]     27%|██▋       | 545/2000 [00:41<01:44, 13.98it/s]     27%|██▋       | 547/2000 [00:41<01:42, 14.22it/s]     27%|██▋       | 549/2000 [00:41<01:41, 14.32it/s]     28%|██▊       | 551/2000 [00:42<01:41, 14.34it/s]     28%|██▊       | 553/2000 [00:42<01:42, 14.09it/s]     28%|██▊       | 555/2000 [00:42<01:43, 14.02it/s]     28%|██▊       | 557/2000 [00:42<01:44, 13.85it/s]     28%|██▊       | 559/2000 [00:42<01:44, 13.85it/s]     28%|██▊       | 561/2000 [00:42<01:44, 13.80it/s]     28%|██▊       | 563/2000 [00:42<01:42, 13.98it/s]     28%|██▊       | 565/2000 [00:43<01:41, 14.17it/s]     28%|██▊       | 567/2000 [00:43<01:40, 14.25it/s]     28%|██▊       | 569/2000 [00:43<01:41, 14.13it/s]     29%|██▊       | 571/2000 [00:43<01:42, 13.93it/s]     29%|██▊       | 573/2000 [00:43<01:40, 14.13it/s]     29%|██▉       | 575/2000 [00:43<01:41, 14.10it/s]     29%|██▉       | 577/2000 [00:43<01:39, 14.30it/s]     29%|██▉       | 579/2000 [00:44<01:39, 14.28it/s]     29%|██▉       | 581/2000 [00:44<01:41, 14.04it/s]     29%|██▉       | 583/2000 [00:44<01:40, 14.04it/s]     29%|██▉       | 585/2000 [00:44<01:42, 13.83it/s]     29%|██▉       | 587/2000 [00:44<01:40, 14.06it/s]     29%|██▉       | 589/2000 [00:44<01:40, 14.01it/s]     30%|██▉       | 591/2000 [00:44<01:40, 13.96it/s]     30%|██▉       | 593/2000 [00:45<01:39, 14.15it/s]     30%|██▉       | 595/2000 [00:45<01:41, 13.84it/s]     30%|██▉       | 597/2000 [00:45<01:40, 13.91it/s]     30%|██▉       | 599/2000 [00:45<01:41, 13.79it/s]     30%|███       | 601/2000 [00:45<01:41, 13.76it/s]     30%|███       | 603/2000 [00:45<01:40, 13.90it/s]     30%|███       | 605/2000 [00:45<01:39, 14.01it/s]     30%|███       | 607/2000 [00:46<01:39, 13.96it/s]     30%|███       | 609/2000 [00:46<01:39, 14.05it/s]     31%|███       | 611/2000 [00:46<01:37, 14.29it/s]     31%|███       | 613/2000 [00:46<01:35, 14.52it/s]     31%|███       | 615/2000 [00:46<01:35, 14.43it/s]     31%|███       | 617/2000 [00:46<01:36, 14.32it/s]     31%|███       | 619/2000 [00:46<01:36, 14.24it/s]     31%|███       | 621/2000 [00:47<01:37, 14.19it/s]     31%|███       | 623/2000 [00:47<01:35, 14.39it/s]     31%|███▏      | 625/2000 [00:47<01:37, 14.17it/s]     31%|███▏      | 627/2000 [00:47<01:37, 14.08it/s]     31%|███▏      | 629/2000 [00:47<01:38, 13.95it/s]     32%|███▏      | 631/2000 [00:47<01:37, 13.98it/s]     32%|███▏      | 633/2000 [00:47<01:36, 14.18it/s]     32%|███▏      | 635/2000 [00:48<01:36, 14.20it/s]     32%|███▏      | 637/2000 [00:48<01:37, 13.93it/s]     32%|███▏      | 639/2000 [00:48<01:37, 13.91it/s]     32%|███▏      | 641/2000 [00:48<01:37, 13.95it/s]     32%|███▏      | 643/2000 [00:48<01:36, 14.09it/s]     32%|███▏      | 645/2000 [00:48<01:36, 14.07it/s]     32%|███▏      | 647/2000 [00:48<01:37, 13.84it/s]     32%|███▏      | 649/2000 [00:49<01:35, 14.12it/s]     33%|███▎      | 651/2000 [00:49<01:34, 14.21it/s]     33%|███▎      | 653/2000 [00:49<01:34, 14.28it/s]     33%|███▎      | 655/2000 [00:49<01:33, 14.45it/s]     33%|███▎      | 657/2000 [00:49<01:31, 14.62it/s]     33%|███▎      | 659/2000 [00:49<01:32, 14.56it/s]     33%|███▎      | 661/2000 [00:49<01:32, 14.52it/s]     33%|███▎      | 663/2000 [00:50<01:32, 14.43it/s]     33%|███▎      | 665/2000 [00:50<01:31, 14.67it/s]     33%|███▎      | 667/2000 [00:50<01:30, 14.71it/s]     33%|███▎      | 669/2000 [00:50<01:30, 14.68it/s]     34%|███▎      | 671/2000 [00:50<01:30, 14.61it/s]     34%|███▎      | 673/2000 [00:50<01:29, 14.80it/s]     34%|███▍      | 675/2000 [00:50<01:30, 14.63it/s]     34%|███▍      | 677/2000 [00:50<01:30, 14.64it/s]     34%|███▍      | 679/2000 [00:51<01:30, 14.52it/s]     34%|███▍      | 681/2000 [00:51<01:30, 14.56it/s]     34%|███▍      | 683/2000 [00:51<01:29, 14.64it/s]     34%|███▍      | 685/2000 [00:51<01:32, 14.27it/s]     34%|███▍      | 687/2000 [00:51<01:31, 14.32it/s]     34%|███▍      | 689/2000 [00:51<01:32, 14.11it/s]     35%|███▍      | 691/2000 [00:51<01:33, 13.98it/s]     35%|███▍      | 693/2000 [00:52<01:33, 14.05it/s]     35%|███▍      | 695/2000 [00:52<01:32, 14.05it/s]     35%|███▍      | 697/2000 [00:52<01:31, 14.22it/s]     35%|███▍      | 699/2000 [00:52<01:31, 14.19it/s]     35%|███▌      | 701/2000 [00:52<01:29, 14.56it/s]     35%|███▌      | 703/2000 [00:52<01:29, 14.55it/s]     35%|███▌      | 705/2000 [00:52<01:29, 14.44it/s]     35%|███▌      | 707/2000 [00:53<01:30, 14.36it/s]     35%|███▌      | 709/2000 [00:53<01:30, 14.30it/s]     36%|███▌      | 711/2000 [00:53<01:29, 14.34it/s]     36%|███▌      | 713/2000 [00:53<01:31, 14.02it/s]     36%|███▌      | 715/2000 [00:53<01:30, 14.20it/s]     36%|███▌      | 717/2000 [00:53<01:31, 14.03it/s]     36%|███▌      | 719/2000 [00:53<01:31, 14.03it/s]     36%|███▌      | 721/2000 [00:54<01:30, 14.14it/s]     36%|███▌      | 723/2000 [00:54<01:29, 14.29it/s]     36%|███▋      | 725/2000 [00:54<01:30, 14.04it/s]     36%|███▋      | 727/2000 [00:54<01:30, 14.09it/s]     36%|███▋      | 729/2000 [00:54<01:29, 14.13it/s]     37%|███▋      | 731/2000 [00:54<01:30, 14.10it/s]     37%|███▋      | 733/2000 [00:54<01:28, 14.25it/s]     37%|███▋      | 735/2000 [00:55<01:28, 14.24it/s]     37%|███▋      | 737/2000 [00:55<01:27, 14.41it/s]     37%|███▋      | 739/2000 [00:55<01:28, 14.29it/s]     37%|███▋      | 741/2000 [00:55<01:30, 13.98it/s]     37%|███▋      | 743/2000 [00:55<01:27, 14.35it/s]     37%|███▋      | 745/2000 [00:55<01:29, 14.08it/s]     37%|███▋      | 747/2000 [00:55<01:29, 14.00it/s]     37%|███▋      | 749/2000 [00:56<01:28, 14.12it/s]     38%|███▊      | 751/2000 [00:56<01:28, 14.16it/s]     38%|███▊      | 753/2000 [00:56<01:27, 14.24it/s]     38%|███▊      | 755/2000 [00:56<01:28, 14.06it/s]     38%|███▊      | 757/2000 [00:56<01:27, 14.18it/s]     38%|███▊      | 759/2000 [00:56<01:25, 14.54it/s]     38%|███▊      | 761/2000 [00:56<01:27, 14.20it/s]     38%|███▊      | 763/2000 [00:57<01:28, 14.03it/s]     38%|███▊      | 765/2000 [00:57<01:28, 13.97it/s]     38%|███▊      | 767/2000 [00:57<01:28, 13.88it/s]     38%|███▊      | 769/2000 [00:57<01:28, 13.98it/s]     39%|███▊      | 771/2000 [00:57<01:27, 14.00it/s]     39%|███▊      | 773/2000 [00:57<01:27, 14.06it/s]     39%|███▉      | 775/2000 [00:57<01:26, 14.23it/s]     39%|███▉      | 777/2000 [00:58<01:25, 14.23it/s]     39%|███▉      | 779/2000 [00:58<01:24, 14.47it/s]     39%|███▉      | 781/2000 [00:58<01:23, 14.52it/s]     39%|███▉      | 783/2000 [00:58<01:23, 14.55it/s]     39%|███▉      | 785/2000 [00:58<01:23, 14.51it/s]     39%|███▉      | 787/2000 [00:58<01:23, 14.53it/s]     39%|███▉      | 789/2000 [00:58<01:23, 14.56it/s]     40%|███▉      | 791/2000 [00:58<01:24, 14.32it/s]     40%|███▉      | 793/2000 [00:59<01:24, 14.35it/s]     40%|███▉      | 795/2000 [00:59<01:24, 14.25it/s]     40%|███▉      | 797/2000 [00:59<01:24, 14.30it/s]     40%|███▉      | 799/2000 [00:59<01:24, 14.28it/s]     40%|████      | 801/2000 [00:59<01:24, 14.20it/s]     40%|████      | 803/2000 [00:59<01:26, 13.92it/s]     40%|████      | 805/2000 [00:59<01:25, 13.95it/s]     40%|████      | 807/2000 [01:00<01:24, 14.15it/s]     40%|████      | 809/2000 [01:00<01:23, 14.28it/s]     41%|████      | 811/2000 [01:00<01:21, 14.62it/s]     41%|████      | 813/2000 [01:00<01:21, 14.56it/s]     41%|████      | 815/2000 [01:00<01:22, 14.40it/s]     41%|████      | 817/2000 [01:00<01:22, 14.34it/s]     41%|████      | 819/2000 [01:00<01:22, 14.24it/s]     41%|████      | 821/2000 [01:01<01:23, 14.14it/s]     41%|████      | 823/2000 [01:01<01:22, 14.34it/s]     41%|████▏     | 825/2000 [01:01<01:23, 14.14it/s]     41%|████▏     | 827/2000 [01:01<01:20, 14.57it/s]     41%|████▏     | 829/2000 [01:01<01:19, 14.77it/s]     42%|████▏     | 831/2000 [01:01<01:17, 15.11it/s]     42%|████▏     | 833/2000 [01:01<01:18, 14.84it/s]     42%|████▏     | 835/2000 [01:02<01:17, 15.04it/s]     42%|████▏     | 837/2000 [01:02<01:18, 14.79it/s]     42%|████▏     | 839/2000 [01:02<01:18, 14.74it/s]     42%|████▏     | 841/2000 [01:02<01:20, 14.39it/s]     42%|████▏     | 843/2000 [01:02<01:19, 14.58it/s]     42%|████▏     | 845/2000 [01:02<01:18, 14.72it/s]     42%|████▏     | 847/2000 [01:02<01:19, 14.45it/s]     42%|████▏     | 849/2000 [01:02<01:20, 14.21it/s]     43%|████▎     | 851/2000 [01:03<01:20, 14.33it/s]     43%|████▎     | 853/2000 [01:03<01:20, 14.24it/s]     43%|████▎     | 855/2000 [01:03<01:19, 14.40it/s]     43%|████▎     | 857/2000 [01:03<01:18, 14.53it/s]     43%|████▎     | 859/2000 [01:03<01:19, 14.26it/s]     43%|████▎     | 861/2000 [01:03<01:20, 14.19it/s]     43%|████▎     | 863/2000 [01:03<01:19, 14.38it/s]     43%|████▎     | 865/2000 [01:04<01:18, 14.46it/s]     43%|████▎     | 867/2000 [01:04<01:17, 14.58it/s]     43%|████▎     | 869/2000 [01:04<01:18, 14.41it/s]     44%|████▎     | 871/2000 [01:04<01:19, 14.19it/s]     44%|████▎     | 873/2000 [01:04<01:20, 13.97it/s]     44%|████▍     | 875/2000 [01:04<01:20, 14.05it/s]     44%|████▍     | 877/2000 [01:04<01:19, 14.04it/s]     44%|████▍     | 879/2000 [01:05<01:17, 14.39it/s]     44%|████▍     | 881/2000 [01:05<01:19, 14.16it/s]     44%|████▍     | 883/2000 [01:05<01:18, 14.25it/s]     44%|████▍     | 885/2000 [01:05<01:17, 14.30it/s]     44%|████▍     | 887/2000 [01:05<01:18, 14.10it/s]     44%|████▍     | 889/2000 [01:05<01:18, 14.14it/s]     45%|████▍     | 891/2000 [01:05<01:17, 14.23it/s]     45%|████▍     | 893/2000 [01:06<01:16, 14.47it/s]     45%|████▍     | 895/2000 [01:06<01:17, 14.28it/s]     45%|████▍     | 897/2000 [01:06<01:18, 14.09it/s]     45%|████▍     | 899/2000 [01:06<01:17, 14.14it/s]     45%|████▌     | 901/2000 [01:06<01:17, 14.22it/s]     45%|████▌     | 903/2000 [01:06<01:17, 14.21it/s]     45%|████▌     | 905/2000 [01:06<01:17, 14.22it/s]     45%|████▌     | 907/2000 [01:07<01:16, 14.28it/s]     45%|████▌     | 909/2000 [01:07<01:16, 14.26it/s]     46%|████▌     | 911/2000 [01:07<01:17, 14.08it/s]     46%|████▌     | 913/2000 [01:07<01:17, 14.03it/s]     46%|████▌     | 915/2000 [01:07<01:17, 13.98it/s]     46%|████▌     | 917/2000 [01:07<01:17, 13.99it/s]     46%|████▌     | 919/2000 [01:07<01:15, 14.23it/s]     46%|████▌     | 921/2000 [01:08<01:16, 14.11it/s]     46%|████▌     | 923/2000 [01:08<01:15, 14.33it/s]     46%|████▋     | 925/2000 [01:08<01:14, 14.47it/s]     46%|████▋     | 927/2000 [01:08<01:15, 14.29it/s]     46%|████▋     | 929/2000 [01:08<01:13, 14.50it/s]     47%|████▋     | 931/2000 [01:08<01:14, 14.36it/s]     47%|████▋     | 933/2000 [01:08<01:14, 14.39it/s]     47%|████▋     | 935/2000 [01:09<01:13, 14.40it/s]     47%|████▋     | 937/2000 [01:09<01:13, 14.48it/s]     47%|████▋     | 939/2000 [01:09<01:13, 14.47it/s]     47%|████▋     | 941/2000 [01:09<01:12, 14.70it/s]     47%|████▋     | 943/2000 [01:09<01:10, 14.94it/s]     47%|████▋     | 945/2000 [01:09<01:11, 14.79it/s]     47%|████▋     | 947/2000 [01:09<01:10, 15.00it/s]     47%|████▋     | 949/2000 [01:09<01:09, 15.02it/s]     48%|████▊     | 951/2000 [01:10<01:09, 15.17it/s]     48%|████▊     | 953/2000 [01:10<01:10, 14.88it/s]     48%|████▊     | 955/2000 [01:10<01:09, 15.00it/s]     48%|████▊     | 957/2000 [01:10<01:09, 14.95it/s]     48%|████▊     | 959/2000 [01:10<01:10, 14.86it/s]     48%|████▊     | 961/2000 [01:10<01:11, 14.54it/s]     48%|████▊     | 963/2000 [01:10<01:12, 14.26it/s]     48%|████▊     | 965/2000 [01:11<01:12, 14.30it/s]     48%|████▊     | 967/2000 [01:11<01:11, 14.40it/s]     48%|████▊     | 969/2000 [01:11<01:11, 14.35it/s]     49%|████▊     | 971/2000 [01:11<01:10, 14.56it/s]     49%|████▊     | 973/2000 [01:11<01:08, 14.90it/s]     49%|████▉     | 975/2000 [01:11<01:08, 15.00it/s]     49%|████▉     | 977/2000 [01:11<01:06, 15.29it/s]     49%|████▉     | 979/2000 [01:11<01:07, 15.22it/s]     49%|████▉     | 981/2000 [01:12<01:06, 15.30it/s]     49%|████▉     | 983/2000 [01:12<01:06, 15.21it/s]     49%|████▉     | 985/2000 [01:12<01:06, 15.28it/s]     49%|████▉     | 987/2000 [01:12<01:07, 14.94it/s]     49%|████▉     | 989/2000 [01:12<01:06, 15.10it/s]     50%|████▉     | 991/2000 [01:12<01:08, 14.82it/s]     50%|████▉     | 993/2000 [01:12<01:07, 14.83it/s]     50%|████▉     | 995/2000 [01:13<01:08, 14.64it/s]     50%|████▉     | 997/2000 [01:13<01:08, 14.57it/s]     50%|████▉     | 999/2000 [01:13<01:08, 14.54it/s]     50%|█████     | 1001/2000 [01:13<01:08, 14.56it/s]     50%|█████     | 1003/2000 [01:13<01:08, 14.46it/s]     50%|█████     | 1005/2000 [01:13<01:10, 14.21it/s]     50%|█████     | 1007/2000 [01:13<01:09, 14.35it/s]     50%|█████     | 1009/2000 [01:14<01:09, 14.26it/s]     51%|█████     | 1011/2000 [01:14<01:09, 14.19it/s]     51%|█████     | 1013/2000 [01:14<01:08, 14.32it/s]     51%|█████     | 1015/2000 [01:14<01:08, 14.42it/s]     51%|█████     | 1017/2000 [01:14<01:06, 14.70it/s]     51%|█████     | 1019/2000 [01:14<01:06, 14.74it/s]     51%|█████     | 1021/2000 [01:14<01:06, 14.71it/s]     51%|█████     | 1023/2000 [01:14<01:06, 14.68it/s]     51%|█████▏    | 1025/2000 [01:15<01:06, 14.68it/s]     51%|█████▏    | 1027/2000 [01:15<01:07, 14.49it/s]     51%|█████▏    | 1029/2000 [01:15<01:05, 14.78it/s]     52%|█████▏    | 1031/2000 [01:15<01:05, 14.73it/s]     52%|█████▏    | 1033/2000 [01:15<01:05, 14.76it/s]     52%|█████▏    | 1035/2000 [01:15<01:03, 15.18it/s]     52%|█████▏    | 1037/2000 [01:15<01:04, 15.01it/s]     52%|█████▏    | 1039/2000 [01:16<01:05, 14.70it/s]     52%|█████▏    | 1041/2000 [01:16<01:04, 14.81it/s]     52%|█████▏    | 1043/2000 [01:16<01:04, 14.76it/s]     52%|█████▏    | 1045/2000 [01:16<01:05, 14.60it/s]     52%|█████▏    | 1047/2000 [01:16<01:05, 14.61it/s]     52%|█████▏    | 1049/2000 [01:16<01:04, 14.67it/s]     53%|█████▎    | 1051/2000 [01:16<01:03, 14.97it/s]     53%|█████▎    | 1053/2000 [01:17<01:04, 14.67it/s]     53%|█████▎    | 1055/2000 [01:17<01:03, 14.98it/s]     53%|█████▎    | 1057/2000 [01:17<01:04, 14.69it/s]     53%|█████▎    | 1059/2000 [01:17<01:03, 14.73it/s]     53%|█████▎    | 1061/2000 [01:17<01:04, 14.52it/s]     53%|█████▎    | 1063/2000 [01:17<01:04, 14.56it/s]     53%|█████▎    | 1065/2000 [01:17<01:03, 14.71it/s]     53%|█████▎    | 1067/2000 [01:17<01:03, 14.63it/s]     53%|█████▎    | 1069/2000 [01:18<01:03, 14.63it/s]     54%|█████▎    | 1071/2000 [01:18<01:03, 14.69it/s]     54%|█████▎    | 1073/2000 [01:18<01:03, 14.67it/s]     54%|█████▍    | 1075/2000 [01:18<01:03, 14.47it/s]     54%|█████▍    | 1077/2000 [01:18<01:03, 14.46it/s]     54%|█████▍    | 1079/2000 [01:18<01:04, 14.39it/s]     54%|█████▍    | 1081/2000 [01:18<01:04, 14.28it/s]     54%|█████▍    | 1083/2000 [01:19<01:02, 14.75it/s]     54%|█████▍    | 1085/2000 [01:19<01:01, 14.98it/s]     54%|█████▍    | 1087/2000 [01:19<01:03, 14.43it/s]     54%|█████▍    | 1089/2000 [01:19<01:03, 14.37it/s]     55%|█████▍    | 1091/2000 [01:19<01:01, 14.88it/s]     55%|█████▍    | 1093/2000 [01:19<01:01, 14.68it/s]     55%|█████▍    | 1095/2000 [01:19<01:01, 14.73it/s]     55%|█████▍    | 1097/2000 [01:20<01:01, 14.58it/s]     55%|█████▍    | 1099/2000 [01:20<01:03, 14.08it/s]     55%|█████▌    | 1101/2000 [01:20<01:02, 14.31it/s]     55%|█████▌    | 1103/2000 [01:20<01:00, 14.73it/s]     55%|█████▌    | 1105/2000 [01:20<01:01, 14.44it/s]     55%|█████▌    | 1107/2000 [01:20<01:01, 14.49it/s]     55%|█████▌    | 1109/2000 [01:20<01:01, 14.40it/s]     56%|█████▌    | 1111/2000 [01:21<01:00, 14.65it/s]     56%|█████▌    | 1113/2000 [01:21<01:01, 14.39it/s]     56%|█████▌    | 1115/2000 [01:21<01:01, 14.28it/s]     56%|█████▌    | 1117/2000 [01:21<01:02, 14.03it/s]     56%|█████▌    | 1119/2000 [01:21<01:01, 14.33it/s]     56%|█████▌    | 1121/2000 [01:21<01:02, 14.12it/s]     56%|█████▌    | 1123/2000 [01:21<01:01, 14.27it/s]     56%|█████▋    | 1125/2000 [01:21<01:00, 14.56it/s]     56%|█████▋    | 1127/2000 [01:22<01:00, 14.52it/s]     56%|█████▋    | 1129/2000 [01:22<00:57, 15.05it/s]     57%|█████▋    | 1131/2000 [01:22<00:56, 15.39it/s]     57%|█████▋    | 1133/2000 [01:22<00:57, 15.16it/s]     57%|█████▋    | 1135/2000 [01:22<00:57, 14.98it/s]     57%|█████▋    | 1137/2000 [01:22<00:58, 14.75it/s]     57%|█████▋    | 1139/2000 [01:22<00:58, 14.83it/s]     57%|█████▋    | 1141/2000 [01:23<00:56, 15.14it/s]     57%|█████▋    | 1143/2000 [01:23<00:56, 15.05it/s]     57%|█████▋    | 1145/2000 [01:23<00:56, 15.06it/s]     57%|█████▋    | 1147/2000 [01:23<00:55, 15.26it/s]     57%|█████▋    | 1149/2000 [01:23<00:55, 15.34it/s]     58%|█████▊    | 1151/2000 [01:23<00:55, 15.39it/s]     58%|█████▊    | 1153/2000 [01:23<00:56, 15.02it/s]     58%|█████▊    | 1155/2000 [01:23<00:55, 15.30it/s]     58%|█████▊    | 1157/2000 [01:24<00:55, 15.24it/s]     58%|█████▊    | 1159/2000 [01:24<00:56, 14.99it/s]     58%|█████▊    | 1161/2000 [01:24<00:55, 15.15it/s]     58%|█████▊    | 1163/2000 [01:24<00:55, 15.13it/s]     58%|█████▊    | 1165/2000 [01:24<00:55, 15.18it/s]     58%|█████▊    | 1167/2000 [01:24<00:54, 15.21it/s]     58%|█████▊    | 1169/2000 [01:24<00:55, 15.04it/s]     59%|█████▊    | 1171/2000 [01:25<00:54, 15.26it/s]     59%|█████▊    | 1173/2000 [01:25<00:54, 15.26it/s]     59%|█████▉    | 1175/2000 [01:25<00:54, 15.20it/s]     59%|█████▉    | 1177/2000 [01:25<00:55, 14.77it/s]     59%|█████▉    | 1179/2000 [01:25<00:55, 14.92it/s]     59%|█████▉    | 1181/2000 [01:25<00:55, 14.68it/s]     59%|█████▉    | 1183/2000 [01:25<00:55, 14.80it/s]     59%|█████▉    | 1185/2000 [01:25<00:54, 14.92it/s]     59%|█████▉    | 1187/2000 [01:26<00:53, 15.17it/s]     59%|█████▉    | 1189/2000 [01:26<00:53, 15.12it/s]     60%|█████▉    | 1191/2000 [01:26<00:53, 15.03it/s]     60%|█████▉    | 1193/2000 [01:26<00:54, 14.91it/s]     60%|█████▉    | 1195/2000 [01:26<00:54, 14.75it/s]     60%|█████▉    | 1197/2000 [01:26<00:54, 14.77it/s]     60%|█████▉    | 1199/2000 [01:26<00:53, 14.95it/s]     60%|██████    | 1201/2000 [01:27<00:52, 15.12it/s]     60%|██████    | 1203/2000 [01:27<00:52, 15.20it/s]     60%|██████    | 1205/2000 [01:27<00:52, 15.16it/s]     60%|██████    | 1207/2000 [01:27<00:52, 15.00it/s]     60%|██████    | 1209/2000 [01:27<00:53, 14.89it/s]     61%|██████    | 1211/2000 [01:27<00:53, 14.79it/s]     61%|██████    | 1213/2000 [01:27<00:53, 14.69it/s]     61%|██████    | 1215/2000 [01:27<00:51, 15.20it/s]     61%|██████    | 1217/2000 [01:28<00:50, 15.49it/s]     61%|██████    | 1219/2000 [01:28<00:50, 15.36it/s]     61%|██████    | 1221/2000 [01:28<00:50, 15.40it/s]     61%|██████    | 1223/2000 [01:28<00:50, 15.37it/s]     61%|██████▏   | 1225/2000 [01:28<00:50, 15.34it/s]     61%|██████▏   | 1227/2000 [01:28<00:50, 15.33it/s]     61%|██████▏   | 1229/2000 [01:28<00:50, 15.32it/s]     62%|██████▏   | 1231/2000 [01:28<00:49, 15.52it/s]     62%|██████▏   | 1233/2000 [01:29<00:49, 15.60it/s]     62%|██████▏   | 1235/2000 [01:29<00:48, 15.79it/s]     62%|██████▏   | 1237/2000 [01:29<00:48, 15.64it/s]     62%|██████▏   | 1239/2000 [01:29<00:49, 15.47it/s]     62%|██████▏   | 1241/2000 [01:29<00:50, 15.14it/s]     62%|██████▏   | 1243/2000 [01:29<00:48, 15.68it/s]     62%|██████▏   | 1245/2000 [01:29<00:47, 16.00it/s]     62%|██████▏   | 1247/2000 [01:30<00:48, 15.64it/s]     62%|██████▏   | 1249/2000 [01:30<00:48, 15.61it/s]     63%|██████▎   | 1251/2000 [01:30<00:48, 15.31it/s]     63%|██████▎   | 1253/2000 [01:30<00:48, 15.37it/s]     63%|██████▎   | 1255/2000 [01:30<00:47, 15.63it/s]     63%|██████▎   | 1257/2000 [01:30<00:46, 15.81it/s]     63%|██████▎   | 1259/2000 [01:30<00:46, 16.10it/s]     63%|██████▎   | 1261/2000 [01:30<00:45, 16.07it/s]     63%|██████▎   | 1263/2000 [01:31<00:45, 16.13it/s]     63%|██████▎   | 1265/2000 [01:31<00:46, 15.88it/s]     63%|██████▎   | 1267/2000 [01:31<00:45, 16.14it/s]     63%|██████▎   | 1269/2000 [01:31<00:45, 15.95it/s]     64%|██████▎   | 1271/2000 [01:31<00:45, 15.96it/s]     64%|██████▎   | 1273/2000 [01:31<00:45, 15.82it/s]     64%|██████▍   | 1275/2000 [01:31<00:45, 15.86it/s]     64%|██████▍   | 1277/2000 [01:31<00:45, 16.05it/s]     64%|██████▍   | 1279/2000 [01:32<00:45, 15.96it/s]     64%|██████▍   | 1281/2000 [01:32<00:45, 15.82it/s]     64%|██████▍   | 1283/2000 [01:32<00:44, 16.02it/s]     64%|██████▍   | 1285/2000 [01:32<00:44, 16.15it/s]     64%|██████▍   | 1287/2000 [01:32<00:45, 15.73it/s]     64%|██████▍   | 1289/2000 [01:32<00:44, 15.81it/s]     65%|██████▍   | 1291/2000 [01:32<00:44, 15.79it/s]     65%|██████▍   | 1293/2000 [01:32<00:44, 15.91it/s]     65%|██████▍   | 1295/2000 [01:33<00:44, 15.79it/s]     65%|██████▍   | 1297/2000 [01:33<00:44, 15.71it/s]     65%|██████▍   | 1299/2000 [01:33<00:45, 15.51it/s]     65%|██████▌   | 1301/2000 [01:33<00:45, 15.41it/s]     65%|██████▌   | 1303/2000 [01:33<00:44, 15.51it/s]     65%|██████▌   | 1305/2000 [01:33<00:45, 15.44it/s]     65%|██████▌   | 1307/2000 [01:33<00:44, 15.67it/s]     65%|██████▌   | 1309/2000 [01:33<00:44, 15.55it/s]     66%|██████▌   | 1311/2000 [01:34<00:43, 15.75it/s]     66%|██████▌   | 1313/2000 [01:34<00:43, 15.75it/s]     66%|██████▌   | 1315/2000 [01:34<00:42, 16.26it/s]     66%|██████▌   | 1317/2000 [01:34<00:42, 16.03it/s]     66%|██████▌   | 1319/2000 [01:34<00:43, 15.66it/s]     66%|██████▌   | 1321/2000 [01:34<00:42, 15.83it/s]     66%|██████▌   | 1323/2000 [01:34<00:43, 15.66it/s]     66%|██████▋   | 1325/2000 [01:34<00:44, 15.33it/s]     66%|██████▋   | 1327/2000 [01:35<00:44, 15.17it/s]     66%|██████▋   | 1329/2000 [01:35<00:43, 15.27it/s]     67%|██████▋   | 1331/2000 [01:35<00:42, 15.68it/s]     67%|██████▋   | 1333/2000 [01:35<00:43, 15.42it/s]     67%|██████▋   | 1335/2000 [01:35<00:42, 15.59it/s]     67%|██████▋   | 1337/2000 [01:35<00:42, 15.72it/s]     67%|██████▋   | 1339/2000 [01:35<00:41, 15.94it/s]     67%|██████▋   | 1341/2000 [01:35<00:41, 16.03it/s]     67%|██████▋   | 1343/2000 [01:36<00:41, 15.86it/s]     67%|██████▋   | 1345/2000 [01:36<00:41, 15.90it/s]     67%|██████▋   | 1347/2000 [01:36<00:42, 15.37it/s]     67%|██████▋   | 1349/2000 [01:36<00:42, 15.41it/s]     68%|██████▊   | 1351/2000 [01:36<00:41, 15.49it/s]     68%|██████▊   | 1353/2000 [01:36<00:41, 15.41it/s]     68%|██████▊   | 1355/2000 [01:36<00:42, 15.29it/s]     68%|██████▊   | 1357/2000 [01:37<00:41, 15.48it/s]     68%|██████▊   | 1359/2000 [01:37<00:41, 15.47it/s]     68%|██████▊   | 1361/2000 [01:37<00:41, 15.34it/s]     68%|██████▊   | 1363/2000 [01:37<00:39, 16.12it/s]     68%|██████▊   | 1365/2000 [01:37<00:38, 16.39it/s]     68%|██████▊   | 1367/2000 [01:37<00:38, 16.43it/s]     68%|██████▊   | 1369/2000 [01:37<00:39, 16.15it/s]     69%|██████▊   | 1371/2000 [01:37<00:39, 15.96it/s]     69%|██████▊   | 1373/2000 [01:38<00:39, 15.83it/s]     69%|██████▉   | 1375/2000 [01:38<00:39, 15.88it/s]     69%|██████▉   | 1377/2000 [01:38<00:39, 15.63it/s]     69%|██████▉   | 1379/2000 [01:38<00:39, 15.88it/s]     69%|██████▉   | 1381/2000 [01:38<00:39, 15.62it/s]     69%|██████▉   | 1383/2000 [01:38<00:39, 15.45it/s]     69%|██████▉   | 1385/2000 [01:38<00:39, 15.47it/s]     69%|██████▉   | 1387/2000 [01:38<00:39, 15.64it/s]     69%|██████▉   | 1389/2000 [01:39<00:38, 15.68it/s]     70%|██████▉   | 1391/2000 [01:39<00:39, 15.49it/s]     70%|██████▉   | 1393/2000 [01:39<00:37, 16.32it/s]     70%|██████▉   | 1395/2000 [01:39<00:37, 16.31it/s]     70%|██████▉   | 1397/2000 [01:39<00:36, 16.53it/s]     70%|██████▉   | 1399/2000 [01:39<00:36, 16.30it/s]     70%|███████   | 1401/2000 [01:39<00:36, 16.52it/s]     70%|███████   | 1403/2000 [01:39<00:37, 15.91it/s]     70%|███████   | 1405/2000 [01:40<00:38, 15.44it/s]     70%|███████   | 1407/2000 [01:40<00:37, 15.82it/s]     70%|███████   | 1409/2000 [01:40<00:36, 16.33it/s]     71%|███████   | 1411/2000 [01:40<00:36, 16.14it/s]     71%|███████   | 1413/2000 [01:40<00:36, 16.10it/s]     71%|███████   | 1415/2000 [01:40<00:36, 15.99it/s]     71%|███████   | 1417/2000 [01:40<00:36, 16.06it/s]     71%|███████   | 1419/2000 [01:40<00:36, 15.81it/s]     71%|███████   | 1421/2000 [01:41<00:37, 15.58it/s]     71%|███████   | 1423/2000 [01:41<00:37, 15.29it/s]     71%|███████▏  | 1425/2000 [01:41<00:37, 15.41it/s]     71%|███████▏  | 1427/2000 [01:41<00:37, 15.37it/s]     71%|███████▏  | 1429/2000 [01:41<00:37, 15.22it/s]     72%|███████▏  | 1431/2000 [01:41<00:36, 15.80it/s]     72%|███████▏  | 1433/2000 [01:41<00:36, 15.71it/s]     72%|███████▏  | 1435/2000 [01:41<00:34, 16.23it/s]     72%|███████▏  | 1437/2000 [01:42<00:33, 16.63it/s]     72%|███████▏  | 1439/2000 [01:42<00:34, 16.41it/s]     72%|███████▏  | 1441/2000 [01:42<00:33, 16.68it/s]     72%|███████▏  | 1443/2000 [01:42<00:33, 16.53it/s]     72%|███████▏  | 1445/2000 [01:42<00:33, 16.44it/s]     72%|███████▏  | 1447/2000 [01:42<00:34, 16.23it/s]     72%|███████▏  | 1449/2000 [01:42<00:32, 16.79it/s]     73%|███████▎  | 1451/2000 [01:42<00:32, 16.93it/s]     73%|███████▎  | 1453/2000 [01:43<00:33, 16.56it/s]     73%|███████▎  | 1455/2000 [01:43<00:33, 16.23it/s]     73%|███████▎  | 1457/2000 [01:43<00:33, 16.00it/s]     73%|███████▎  | 1459/2000 [01:43<00:34, 15.64it/s]     73%|███████▎  | 1461/2000 [01:43<00:34, 15.68it/s]     73%|███████▎  | 1463/2000 [01:43<00:33, 15.92it/s]     73%|███████▎  | 1465/2000 [01:43<00:33, 16.01it/s]     73%|███████▎  | 1467/2000 [01:43<00:34, 15.43it/s]     73%|███████▎  | 1469/2000 [01:44<00:33, 15.73it/s]     74%|███████▎  | 1471/2000 [01:44<00:33, 15.73it/s]     74%|███████▎  | 1473/2000 [01:44<00:32, 16.32it/s]     74%|███████▍  | 1475/2000 [01:44<00:31, 16.53it/s]     74%|███████▍  | 1477/2000 [01:44<00:32, 16.05it/s]     74%|███████▍  | 1479/2000 [01:44<00:32, 15.82it/s]     74%|███████▍  | 1481/2000 [01:44<00:32, 15.73it/s]     74%|███████▍  | 1483/2000 [01:44<00:31, 16.34it/s]     74%|███████▍  | 1485/2000 [01:45<00:31, 16.16it/s]     74%|███████▍  | 1487/2000 [01:45<00:31, 16.26it/s]     74%|███████▍  | 1489/2000 [01:45<00:32, 15.95it/s]     75%|███████▍  | 1491/2000 [01:45<00:31, 16.42it/s]     75%|███████▍  | 1493/2000 [01:45<00:30, 16.60it/s]     75%|███████▍  | 1495/2000 [01:45<00:30, 16.73it/s]     75%|███████▍  | 1497/2000 [01:45<00:30, 16.35it/s]     75%|███████▍  | 1499/2000 [01:45<00:30, 16.64it/s]     75%|███████▌  | 1501/2000 [01:45<00:30, 16.60it/s]     75%|███████▌  | 1503/2000 [01:46<00:30, 16.04it/s]     75%|███████▌  | 1505/2000 [01:46<00:29, 16.64it/s]     75%|███████▌  | 1507/2000 [01:46<00:29, 16.85it/s]     75%|███████▌  | 1509/2000 [01:46<00:29, 16.91it/s]     76%|███████▌  | 1511/2000 [01:46<00:28, 17.21it/s]     76%|███████▌  | 1513/2000 [01:46<00:28, 17.38it/s]     76%|███████▌  | 1515/2000 [01:46<00:28, 17.29it/s]     76%|███████▌  | 1517/2000 [01:46<00:28, 17.06it/s]     76%|███████▌  | 1519/2000 [01:47<00:28, 16.97it/s]     76%|███████▌  | 1521/2000 [01:47<00:28, 16.92it/s]     76%|███████▌  | 1523/2000 [01:47<00:28, 16.81it/s]     76%|███████▋  | 1525/2000 [01:47<00:29, 15.95it/s]     76%|███████▋  | 1527/2000 [01:47<00:29, 16.19it/s]     76%|███████▋  | 1529/2000 [01:47<00:29, 15.91it/s]     77%|███████▋  | 1531/2000 [01:47<00:28, 16.39it/s]     77%|███████▋  | 1533/2000 [01:47<00:28, 16.20it/s]     77%|███████▋  | 1535/2000 [01:48<00:29, 15.99it/s]     77%|███████▋  | 1537/2000 [01:48<00:29, 15.72it/s]     77%|███████▋  | 1539/2000 [01:48<00:29, 15.87it/s]     77%|███████▋  | 1541/2000 [01:48<00:28, 16.21it/s]     77%|███████▋  | 1543/2000 [01:48<00:27, 16.38it/s]     77%|███████▋  | 1545/2000 [01:48<00:28, 16.18it/s]     77%|███████▋  | 1547/2000 [01:48<00:27, 16.21it/s]     77%|███████▋  | 1549/2000 [01:48<00:27, 16.60it/s]     78%|███████▊  | 1551/2000 [01:49<00:26, 16.89it/s]     78%|███████▊  | 1553/2000 [01:49<00:26, 16.86it/s]     78%|███████▊  | 1555/2000 [01:49<00:26, 16.60it/s]     78%|███████▊  | 1557/2000 [01:49<00:26, 16.57it/s]     78%|███████▊  | 1559/2000 [01:49<00:26, 16.71it/s]     78%|███████▊  | 1561/2000 [01:49<00:26, 16.82it/s]     78%|███████▊  | 1563/2000 [01:49<00:25, 16.89it/s]     78%|███████▊  | 1565/2000 [01:49<00:26, 16.45it/s]     78%|███████▊  | 1567/2000 [01:49<00:26, 16.17it/s]     78%|███████▊  | 1569/2000 [01:50<00:26, 16.27it/s]     79%|███████▊  | 1571/2000 [01:50<00:27, 15.81it/s]     79%|███████▊  | 1573/2000 [01:50<00:26, 16.01it/s]     79%|███████▉  | 1575/2000 [01:50<00:27, 15.58it/s]     79%|███████▉  | 1577/2000 [01:50<00:25, 16.30it/s]     79%|███████▉  | 1579/2000 [01:50<00:26, 15.85it/s]     79%|███████▉  | 1581/2000 [01:50<00:25, 16.36it/s]     79%|███████▉  | 1583/2000 [01:50<00:26, 15.96it/s]     79%|███████▉  | 1585/2000 [01:51<00:26, 15.59it/s]     79%|███████▉  | 1587/2000 [01:51<00:26, 15.71it/s]     79%|███████▉  | 1589/2000 [01:51<00:26, 15.79it/s]     80%|███████▉  | 1591/2000 [01:51<00:25, 15.93it/s]     80%|███████▉  | 1593/2000 [01:51<00:24, 16.64it/s]     80%|███████▉  | 1595/2000 [01:51<00:24, 16.67it/s]     80%|███████▉  | 1597/2000 [01:51<00:24, 16.78it/s]     80%|███████▉  | 1599/2000 [01:51<00:23, 16.77it/s]     80%|████████  | 1601/2000 [01:52<00:23, 16.94it/s]     80%|████████  | 1603/2000 [01:52<00:22, 17.64it/s]     80%|████████  | 1605/2000 [01:52<00:23, 16.83it/s]     80%|████████  | 1607/2000 [01:52<00:23, 16.82it/s]     80%|████████  | 1609/2000 [01:52<00:23, 16.81it/s]     81%|████████  | 1611/2000 [01:52<00:23, 16.40it/s]     81%|████████  | 1613/2000 [01:52<00:23, 16.20it/s]     81%|████████  | 1615/2000 [01:52<00:24, 15.84it/s]     81%|████████  | 1617/2000 [01:53<00:23, 16.42it/s]     81%|████████  | 1619/2000 [01:53<00:23, 16.28it/s]     81%|████████  | 1621/2000 [01:53<00:22, 16.51it/s]     81%|████████  | 1623/2000 [01:53<00:23, 16.13it/s]     81%|████████▏ | 1625/2000 [01:53<00:22, 16.40it/s]     81%|████████▏ | 1627/2000 [01:53<00:22, 16.91it/s]     81%|████████▏ | 1629/2000 [01:53<00:22, 16.62it/s]     82%|████████▏ | 1631/2000 [01:53<00:22, 16.76it/s]     82%|████████▏ | 1633/2000 [01:54<00:22, 16.45it/s]     82%|████████▏ | 1635/2000 [01:54<00:22, 16.33it/s]     82%|████████▏ | 1637/2000 [01:54<00:21, 16.54it/s]     82%|████████▏ | 1639/2000 [01:54<00:21, 16.60it/s]     82%|████████▏ | 1641/2000 [01:54<00:20, 17.25it/s]     82%|████████▏ | 1643/2000 [01:54<00:20, 17.44it/s]     82%|████████▏ | 1645/2000 [01:54<00:21, 16.74it/s]     82%|████████▏ | 1647/2000 [01:54<00:21, 16.51it/s]     82%|████████▏ | 1649/2000 [01:54<00:21, 16.68it/s]     83%|████████▎ | 1651/2000 [01:55<00:20, 16.79it/s]     83%|████████▎ | 1653/2000 [01:55<00:20, 16.87it/s]     83%|████████▎ | 1655/2000 [01:55<00:20, 16.68it/s]     83%|████████▎ | 1657/2000 [01:55<00:20, 17.11it/s]     83%|████████▎ | 1659/2000 [01:55<00:20, 16.44it/s]     83%|████████▎ | 1661/2000 [01:55<00:20, 16.31it/s]     83%|████████▎ | 1663/2000 [01:55<00:20, 16.22it/s]     83%|████████▎ | 1665/2000 [01:55<00:20, 16.23it/s]     83%|████████▎ | 1667/2000 [01:56<00:19, 16.80it/s]     83%|████████▎ | 1669/2000 [01:56<00:19, 16.88it/s]     84%|████████▎ | 1671/2000 [01:56<00:19, 16.76it/s]     84%|████████▎ | 1673/2000 [01:56<00:19, 17.10it/s]     84%|████████▍ | 1675/2000 [01:56<00:18, 17.53it/s]     84%|████████▍ | 1677/2000 [01:56<00:18, 17.30it/s]     84%|████████▍ | 1679/2000 [01:56<00:18, 16.95it/s]     84%|████████▍ | 1681/2000 [01:56<00:18, 16.98it/s]     84%|████████▍ | 1683/2000 [01:56<00:19, 16.53it/s]     84%|████████▍ | 1685/2000 [01:57<00:19, 16.29it/s]     84%|████████▍ | 1687/2000 [01:57<00:19, 15.79it/s]     84%|████████▍ | 1689/2000 [01:57<00:19, 15.93it/s]     85%|████████▍ | 1691/2000 [01:57<00:19, 16.18it/s]     85%|████████▍ | 1693/2000 [01:57<00:18, 16.44it/s]     85%|████████▍ | 1695/2000 [01:57<00:18, 16.61it/s]     85%|████████▍ | 1697/2000 [01:57<00:17, 16.90it/s]     85%|████████▍ | 1699/2000 [01:57<00:18, 16.70it/s]     85%|████████▌ | 1701/2000 [01:58<00:17, 16.64it/s]     85%|████████▌ | 1703/2000 [01:58<00:17, 17.09it/s]     85%|████████▌ | 1705/2000 [01:58<00:17, 16.67it/s]     85%|████████▌ | 1707/2000 [01:58<00:17, 16.70it/s]     85%|████████▌ | 1709/2000 [01:58<00:17, 16.81it/s]     86%|████████▌ | 1711/2000 [01:58<00:16, 17.22it/s]     86%|████████▌ | 1713/2000 [01:58<00:16, 17.26it/s]     86%|████████▌ | 1715/2000 [01:58<00:16, 17.46it/s]     86%|████████▌ | 1717/2000 [01:59<00:16, 17.36it/s]     86%|████████▌ | 1719/2000 [01:59<00:16, 17.36it/s]     86%|████████▌ | 1721/2000 [01:59<00:16, 17.37it/s]     86%|████████▌ | 1723/2000 [01:59<00:15, 17.36it/s]     86%|████████▋ | 1725/2000 [01:59<00:15, 17.36it/s]     86%|████████▋ | 1727/2000 [01:59<00:15, 17.27it/s]     86%|████████▋ | 1729/2000 [01:59<00:15, 17.22it/s]     87%|████████▋ | 1731/2000 [01:59<00:15, 17.26it/s]     87%|████████▋ | 1734/2000 [01:59<00:14, 18.31it/s]     87%|████████▋ | 1736/2000 [02:00<00:14, 18.66it/s]     87%|████████▋ | 1738/2000 [02:00<00:14, 18.28it/s]     87%|████████▋ | 1740/2000 [02:00<00:13, 18.66it/s]     87%|████████▋ | 1742/2000 [02:00<00:14, 18.27it/s]     87%|████████▋ | 1744/2000 [02:00<00:13, 18.56it/s]     87%|████████▋ | 1746/2000 [02:00<00:13, 18.88it/s]     87%|████████▋ | 1748/2000 [02:00<00:13, 18.71it/s]     88%|████████▊ | 1750/2000 [02:00<00:13, 18.21it/s]     88%|████████▊ | 1752/2000 [02:00<00:13, 18.24it/s]     88%|████████▊ | 1754/2000 [02:01<00:13, 18.26it/s]     88%|████████▊ | 1756/2000 [02:01<00:13, 17.44it/s]     88%|████████▊ | 1758/2000 [02:01<00:14, 16.82it/s]     88%|████████▊ | 1760/2000 [02:01<00:13, 17.58it/s]     88%|████████▊ | 1762/2000 [02:01<00:13, 17.09it/s]     88%|████████▊ | 1764/2000 [02:01<00:13, 17.34it/s]     88%|████████▊ | 1766/2000 [02:01<00:13, 17.10it/s]     88%|████████▊ | 1768/2000 [02:01<00:13, 17.26it/s]     89%|████████▊ | 1771/2000 [02:02<00:12, 18.31it/s]     89%|████████▊ | 1773/2000 [02:02<00:12, 18.30it/s]     89%|████████▉ | 1775/2000 [02:02<00:12, 18.20it/s]     89%|████████▉ | 1777/2000 [02:02<00:12, 17.94it/s]     89%|████████▉ | 1779/2000 [02:02<00:12, 17.44it/s]     89%|████████▉ | 1781/2000 [02:02<00:12, 17.69it/s]     89%|████████▉ | 1783/2000 [02:02<00:12, 17.59it/s]     89%|████████▉ | 1785/2000 [02:02<00:12, 17.45it/s]     89%|████████▉ | 1787/2000 [02:02<00:12, 17.43it/s]     89%|████████▉ | 1789/2000 [02:03<00:12, 17.32it/s]     90%|████████▉ | 1791/2000 [02:03<00:11, 17.58it/s]     90%|████████▉ | 1793/2000 [02:03<00:11, 17.70it/s]     90%|████████▉ | 1796/2000 [02:03<00:11, 18.43it/s]     90%|████████▉ | 1799/2000 [02:03<00:10, 18.87it/s]     90%|█████████ | 1801/2000 [02:03<00:10, 18.55it/s]     90%|█████████ | 1803/2000 [02:03<00:10, 18.75it/s]     90%|█████████ | 1805/2000 [02:03<00:10, 18.72it/s]     90%|█████████ | 1807/2000 [02:04<00:10, 18.43it/s]     90%|█████████ | 1809/2000 [02:04<00:10, 18.78it/s]     91%|█████████ | 1811/2000 [02:04<00:10, 18.73it/s]     91%|█████████ | 1813/2000 [02:04<00:10, 18.22it/s]     91%|█████████ | 1815/2000 [02:04<00:10, 17.78it/s]     91%|█████████ | 1818/2000 [02:04<00:09, 18.63it/s]     91%|█████████ | 1820/2000 [02:04<00:09, 18.53it/s]     91%|█████████ | 1822/2000 [02:04<00:09, 18.56it/s]     91%|█████████ | 1824/2000 [02:04<00:09, 18.40it/s]     91%|█████████▏| 1826/2000 [02:05<00:09, 18.47it/s]     91%|█████████▏| 1828/2000 [02:05<00:09, 18.71it/s]     92%|█████████▏| 1830/2000 [02:05<00:09, 18.37it/s]     92%|█████████▏| 1832/2000 [02:05<00:09, 18.44it/s]     92%|█████████▏| 1835/2000 [02:05<00:08, 19.17it/s]     92%|█████████▏| 1837/2000 [02:05<00:08, 18.82it/s]     92%|█████████▏| 1840/2000 [02:05<00:08, 19.23it/s]     92%|█████████▏| 1842/2000 [02:05<00:08, 18.89it/s]     92%|█████████▏| 1844/2000 [02:06<00:08, 18.56it/s]     92%|█████████▏| 1846/2000 [02:06<00:08, 18.67it/s]     92%|█████████▏| 1849/2000 [02:06<00:07, 19.75it/s]     93%|█████████▎| 1851/2000 [02:06<00:07, 18.79it/s]     93%|█████████▎| 1853/2000 [02:06<00:07, 18.74it/s]     93%|█████████▎| 1855/2000 [02:06<00:07, 18.61it/s]     93%|█████████▎| 1857/2000 [02:06<00:07, 18.41it/s]     93%|█████████▎| 1859/2000 [02:06<00:07, 17.99it/s]     93%|█████████▎| 1861/2000 [02:06<00:07, 18.05it/s]     93%|█████████▎| 1863/2000 [02:07<00:07, 18.03it/s]     93%|█████████▎| 1865/2000 [02:07<00:07, 18.19it/s]     93%|█████████▎| 1867/2000 [02:07<00:07, 18.62it/s]     93%|█████████▎| 1869/2000 [02:07<00:07, 18.13it/s]     94%|█████████▎| 1871/2000 [02:07<00:07, 16.27it/s]     94%|█████████▎| 1873/2000 [02:07<00:07, 15.88it/s]     94%|█████████▍| 1876/2000 [02:07<00:07, 17.26it/s]     94%|█████████▍| 1878/2000 [02:07<00:07, 17.37it/s]     94%|█████████▍| 1880/2000 [02:08<00:07, 17.13it/s]     94%|█████████▍| 1883/2000 [02:08<00:06, 18.17it/s]     94%|█████████▍| 1885/2000 [02:08<00:06, 17.96it/s]     94%|█████████▍| 1887/2000 [02:08<00:06, 17.71it/s]     94%|█████████▍| 1889/2000 [02:08<00:06, 18.14it/s]     95%|█████████▍| 1891/2000 [02:08<00:05, 18.27it/s]     95%|█████████▍| 1894/2000 [02:08<00:05, 18.52it/s]     95%|█████████▍| 1896/2000 [02:08<00:05, 18.21it/s]     95%|█████████▍| 1898/2000 [02:09<00:05, 18.25it/s]     95%|█████████▌| 1900/2000 [02:09<00:05, 18.55it/s]     95%|█████████▌| 1903/2000 [02:09<00:05, 18.98it/s]     95%|█████████▌| 1905/2000 [02:09<00:05, 18.62it/s]     95%|█████████▌| 1907/2000 [02:09<00:04, 18.61it/s]     96%|█████████▌| 1910/2000 [02:09<00:04, 19.09it/s]     96%|█████████▌| 1912/2000 [02:09<00:04, 18.53it/s]     96%|█████████▌| 1914/2000 [02:09<00:04, 18.56it/s]     96%|█████████▌| 1916/2000 [02:09<00:04, 18.40it/s]     96%|█████████▌| 1918/2000 [02:10<00:04, 18.01it/s]     96%|█████████▌| 1920/2000 [02:10<00:04, 17.82it/s]     96%|█████████▌| 1922/2000 [02:10<00:04, 17.34it/s]     96%|█████████▌| 1924/2000 [02:10<00:04, 17.98it/s]     96%|█████████▋| 1926/2000 [02:10<00:04, 18.17it/s]     96%|█████████▋| 1928/2000 [02:10<00:04, 17.84it/s]     96%|█████████▋| 1930/2000 [02:10<00:04, 17.09it/s]     97%|█████████▋| 1932/2000 [02:10<00:03, 17.34it/s]     97%|█████████▋| 1934/2000 [02:11<00:03, 17.70it/s]     97%|█████████▋| 1937/2000 [02:11<00:03, 18.69it/s]     97%|█████████▋| 1939/2000 [02:11<00:03, 18.41it/s]     97%|█████████▋| 1941/2000 [02:11<00:03, 18.58it/s]     97%|█████████▋| 1943/2000 [02:11<00:03, 18.61it/s]     97%|█████████▋| 1945/2000 [02:11<00:02, 18.70it/s]     97%|█████████▋| 1947/2000 [02:11<00:02, 18.57it/s]     97%|█████████▋| 1949/2000 [02:11<00:02, 18.68it/s]     98%|█████████▊| 1951/2000 [02:11<00:02, 18.37it/s]     98%|█████████▊| 1953/2000 [02:12<00:02, 18.24it/s]     98%|█████████▊| 1955/2000 [02:12<00:02, 17.86it/s]     98%|█████████▊| 1957/2000 [02:12<00:02, 17.99it/s]     98%|█████████▊| 1959/2000 [02:12<00:02, 18.47it/s]     98%|█████████▊| 1962/2000 [02:12<00:02, 18.69it/s]     98%|█████████▊| 1964/2000 [02:12<00:01, 18.77it/s]     98%|█████████▊| 1966/2000 [02:12<00:01, 18.56it/s]     98%|█████████▊| 1968/2000 [02:12<00:01, 17.86it/s]     98%|█████████▊| 1970/2000 [02:12<00:01, 18.17it/s]     99%|█████████▊| 1973/2000 [02:13<00:01, 19.08it/s]     99%|█████████▉| 1975/2000 [02:13<00:01, 18.95it/s]     99%|█████████▉| 1978/2000 [02:13<00:01, 19.03it/s]     99%|█████████▉| 1981/2000 [02:13<00:00, 19.17it/s]     99%|█████████▉| 1984/2000 [02:13<00:00, 19.42it/s]     99%|█████████▉| 1986/2000 [02:13<00:00, 19.06it/s]     99%|█████████▉| 1988/2000 [02:13<00:00, 19.05it/s]    100%|█████████▉| 1990/2000 [02:13<00:00, 19.15it/s]    100%|█████████▉| 1992/2000 [02:14<00:00, 19.21it/s]    100%|█████████▉| 1995/2000 [02:14<00:00, 19.59it/s]    100%|█████████▉| 1998/2000 [02:14<00:00, 20.08it/s]    100%|██████████| 2000/2000 [02:14<00:00, 19.35it/s]    100%|██████████| 2000/2000 [02:14<00:00, 14.87it/s]




.. GENERATED FROM PYTHON SOURCE LINES 876-880

.. code-block:: Python


    sampler = inv_result_fixed_d_sampler.sampler
    az_idata = az.from_emcee(sampler, var_names=labels)








.. GENERATED FROM PYTHON SOURCE LINES 882-885

.. code-block:: Python


    az_idata.get("posterior")






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
    <defs>
    <symbol id="icon-database" viewBox="0 0 32 32">
    <path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
    <path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    <path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    </symbol>
    <symbol id="icon-file-text2" viewBox="0 0 32 32">
    <path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
    <path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    </symbol>
    </defs>
    </svg>
    <style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
     *
     */

    :root {
      --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
      --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
      --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
      --xr-border-color: var(--jp-border-color2, #e0e0e0);
      --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
      --xr-background-color: var(--jp-layout-color0, white);
      --xr-background-color-row-even: var(--jp-layout-color1, white);
      --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
    }

    html[theme=dark],
    body[data-theme=dark],
    body.vscode-dark {
      --xr-font-color0: rgba(255, 255, 255, 1);
      --xr-font-color2: rgba(255, 255, 255, 0.54);
      --xr-font-color3: rgba(255, 255, 255, 0.38);
      --xr-border-color: #1F1F1F;
      --xr-disabled-color: #515151;
      --xr-background-color: #111111;
      --xr-background-color-row-even: #111111;
      --xr-background-color-row-odd: #313131;
    }

    .xr-wrap {
      display: block !important;
      min-width: 300px;
      max-width: 700px;
    }

    .xr-text-repr-fallback {
      /* fallback to plain text repr when CSS is not injected (untrusted notebook) */
      display: none;
    }

    .xr-header {
      padding-top: 6px;
      padding-bottom: 6px;
      margin-bottom: 4px;
      border-bottom: solid 1px var(--xr-border-color);
    }

    .xr-header > div,
    .xr-header > ul {
      display: inline;
      margin-top: 0;
      margin-bottom: 0;
    }

    .xr-obj-type,
    .xr-array-name {
      margin-left: 2px;
      margin-right: 10px;
    }

    .xr-obj-type {
      color: var(--xr-font-color2);
    }

    .xr-sections {
      padding-left: 0 !important;
      display: grid;
      grid-template-columns: 150px auto auto 1fr 20px 20px;
    }

    .xr-section-item {
      display: contents;
    }

    .xr-section-item input {
      display: none;
    }

    .xr-section-item input + label {
      color: var(--xr-disabled-color);
    }

    .xr-section-item input:enabled + label {
      cursor: pointer;
      color: var(--xr-font-color2);
    }

    .xr-section-item input:enabled + label:hover {
      color: var(--xr-font-color0);
    }

    .xr-section-summary {
      grid-column: 1;
      color: var(--xr-font-color2);
      font-weight: 500;
    }

    .xr-section-summary > span {
      display: inline-block;
      padding-left: 0.5em;
    }

    .xr-section-summary-in:disabled + label {
      color: var(--xr-font-color2);
    }

    .xr-section-summary-in + label:before {
      display: inline-block;
      content: '►';
      font-size: 11px;
      width: 15px;
      text-align: center;
    }

    .xr-section-summary-in:disabled + label:before {
      color: var(--xr-disabled-color);
    }

    .xr-section-summary-in:checked + label:before {
      content: '▼';
    }

    .xr-section-summary-in:checked + label > span {
      display: none;
    }

    .xr-section-summary,
    .xr-section-inline-details {
      padding-top: 4px;
      padding-bottom: 4px;
    }

    .xr-section-inline-details {
      grid-column: 2 / -1;
    }

    .xr-section-details {
      display: none;
      grid-column: 1 / -1;
      margin-bottom: 5px;
    }

    .xr-section-summary-in:checked ~ .xr-section-details {
      display: contents;
    }

    .xr-array-wrap {
      grid-column: 1 / -1;
      display: grid;
      grid-template-columns: 20px auto;
    }

    .xr-array-wrap > label {
      grid-column: 1;
      vertical-align: top;
    }

    .xr-preview {
      color: var(--xr-font-color3);
    }

    .xr-array-preview,
    .xr-array-data {
      padding: 0 5px !important;
      grid-column: 2;
    }

    .xr-array-data,
    .xr-array-in:checked ~ .xr-array-preview {
      display: none;
    }

    .xr-array-in:checked ~ .xr-array-data,
    .xr-array-preview {
      display: inline-block;
    }

    .xr-dim-list {
      display: inline-block !important;
      list-style: none;
      padding: 0 !important;
      margin: 0;
    }

    .xr-dim-list li {
      display: inline-block;
      padding: 0;
      margin: 0;
    }

    .xr-dim-list:before {
      content: '(';
    }

    .xr-dim-list:after {
      content: ')';
    }

    .xr-dim-list li:not(:last-child):after {
      content: ',';
      padding-right: 5px;
    }

    .xr-has-index {
      font-weight: bold;
    }

    .xr-var-list,
    .xr-var-item {
      display: contents;
    }

    .xr-var-item > div,
    .xr-var-item label,
    .xr-var-item > .xr-var-name span {
      background-color: var(--xr-background-color-row-even);
      margin-bottom: 0;
    }

    .xr-var-item > .xr-var-name:hover span {
      padding-right: 5px;
    }

    .xr-var-list > li:nth-child(odd) > div,
    .xr-var-list > li:nth-child(odd) > label,
    .xr-var-list > li:nth-child(odd) > .xr-var-name span {
      background-color: var(--xr-background-color-row-odd);
    }

    .xr-var-name {
      grid-column: 1;
    }

    .xr-var-dims {
      grid-column: 2;
    }

    .xr-var-dtype {
      grid-column: 3;
      text-align: right;
      color: var(--xr-font-color2);
    }

    .xr-var-preview {
      grid-column: 4;
    }

    .xr-index-preview {
      grid-column: 2 / 5;
      color: var(--xr-font-color2);
    }

    .xr-var-name,
    .xr-var-dims,
    .xr-var-dtype,
    .xr-preview,
    .xr-attrs dt {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      padding-right: 10px;
    }

    .xr-var-name:hover,
    .xr-var-dims:hover,
    .xr-var-dtype:hover,
    .xr-attrs dt:hover {
      overflow: visible;
      width: auto;
      z-index: 1;
    }

    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      display: none;
      background-color: var(--xr-background-color) !important;
      padding-bottom: 5px !important;
    }

    .xr-var-attrs-in:checked ~ .xr-var-attrs,
    .xr-var-data-in:checked ~ .xr-var-data,
    .xr-index-data-in:checked ~ .xr-index-data {
      display: block;
    }

    .xr-var-data > table {
      float: right;
    }

    .xr-var-name span,
    .xr-var-data,
    .xr-index-name div,
    .xr-index-data,
    .xr-attrs {
      padding-left: 25px !important;
    }

    .xr-attrs,
    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      grid-column: 1 / -1;
    }

    dl.xr-attrs {
      padding: 0;
      margin: 0;
      display: grid;
      grid-template-columns: 125px auto;
    }

    .xr-attrs dt,
    .xr-attrs dd {
      padding: 0;
      margin: 0;
      float: left;
      padding-right: 10px;
      width: auto;
    }

    .xr-attrs dt {
      font-weight: normal;
      grid-column: 1;
    }

    .xr-attrs dt:hover span {
      display: inline-block;
      background: var(--xr-background-color);
      padding-right: 10px;
    }

    .xr-attrs dd {
      grid-column: 2;
      white-space: pre-wrap;
      word-break: break-all;
    }

    .xr-icon-database,
    .xr-icon-file-text2,
    .xr-no-icon {
      display: inline-block;
      vertical-align: middle;
      width: 1em;
      height: 1.5em !important;
      stroke-width: 0;
      stroke: currentColor;
      fill: currentColor;
    }
    </style><pre class='xr-text-repr-fallback'>&lt;xarray.Dataset&gt;
    Dimensions:  (chain: 40, draw: 2000)
    Coordinates:
      * chain    (chain) int64 0 1 2 3 4 5 6 7 8 9 ... 30 31 32 33 34 35 36 37 38 39
      * draw     (draw) int64 0 1 2 3 4 5 6 7 ... 1993 1994 1995 1996 1997 1998 1999
    Data variables: (12/17)
        v0       (chain, draw) float64 3.515 3.515 3.515 3.515 ... 3.381 3.383 3.383
        t0       (chain, draw) float64 14.82 14.82 14.82 14.82 ... 15.8 15.94 15.94
        v1       (chain, draw) float64 3.354 3.354 3.354 3.354 ... 3.614 3.62 3.62
        t1       (chain, draw) float64 15.19 15.19 15.19 15.19 ... 18.57 18.43 18.43
        v2       (chain, draw) float64 3.335 3.335 3.335 3.335 ... 4.206 4.204 4.204
        t2       (chain, draw) float64 14.26 14.26 14.26 14.26 ... 11.13 11.08 11.08
        ...       ...
        t5       (chain, draw) float64 14.91 14.91 14.91 14.91 ... 6.737 6.345 6.345
        v6       (chain, draw) float64 4.336 4.336 4.336 4.336 ... 4.615 4.628 4.628
        t6       (chain, draw) float64 14.48 14.48 14.48 14.48 ... 6.219 5.991 5.991
        v7       (chain, draw) float64 4.157 4.157 4.157 4.157 ... 4.324 4.343 4.343
        t7       (chain, draw) float64 14.85 14.85 14.85 14.85 ... 15.1 16.26 16.26
        v8       (chain, draw) float64 4.624 4.624 4.624 4.624 ... 4.475 4.478 4.478
    Attributes:
        created_at:                 2024-04-17T06:34:56.899934
        arviz_version:              0.17.0
        inference_library:          emcee
        inference_library_version:  3.1.4</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-442b28e7-5dcf-4a1c-9155-490cd4a2dfa3' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-442b28e7-5dcf-4a1c-9155-490cd4a2dfa3' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span class='xr-has-index'>chain</span>: 40</li><li><span class='xr-has-index'>draw</span>: 2000</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-75448fb3-f55e-46fd-89ac-16c7209f0461' class='xr-section-summary-in' type='checkbox'  checked><label for='section-75448fb3-f55e-46fd-89ac-16c7209f0461' class='xr-section-summary' >Coordinates: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>chain</span></div><div class='xr-var-dims'>(chain)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>0 1 2 3 4 5 6 ... 34 35 36 37 38 39</div><input id='attrs-97385d9b-738a-48ae-896c-8cf6425e7f38' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-97385d9b-738a-48ae-896c-8cf6425e7f38' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-8f8af7eb-c0e9-43ab-b8ec-101544ce899d' class='xr-var-data-in' type='checkbox'><label for='data-8f8af7eb-c0e9-43ab-b8ec-101544ce899d' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
           18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
           36, 37, 38, 39])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>draw</span></div><div class='xr-var-dims'>(draw)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>0 1 2 3 4 ... 1996 1997 1998 1999</div><input id='attrs-9c64e4e3-c777-4d87-8b47-477dbb5b2f80' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-9c64e4e3-c777-4d87-8b47-477dbb5b2f80' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-0b39da01-f090-4705-ac03-8f19b51c7eae' class='xr-var-data-in' type='checkbox'><label for='data-0b39da01-f090-4705-ac03-8f19b51c7eae' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([   0,    1,    2, ..., 1997, 1998, 1999])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-a68496e1-981c-42f7-bb48-1350343bfcb9' class='xr-section-summary-in' type='checkbox'  ><label for='section-a68496e1-981c-42f7-bb48-1350343bfcb9' class='xr-section-summary' >Data variables: <span>(17)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>v0</span></div><div class='xr-var-dims'>(chain, draw)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>3.515 3.515 3.515 ... 3.383 3.383</div><input id='attrs-233262e3-1258-451c-9955-be22e6535977' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-233262e3-1258-451c-9955-be22e6535977' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-5b632e3b-a728-4f06-b18f-2ef38058b9fe' class='xr-var-data-in' type='checkbox'><label for='data-5b632e3b-a728-4f06-b18f-2ef38058b9fe' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[3.51505219, 3.51505219, 3.51505219, ..., 3.41427923, 3.41427923,
            3.40154731],
           [3.150278  , 3.24033578, 3.24033578, ..., 3.38838525, 3.38838525,
            3.38838525],
           [3.82872922, 3.82872922, 3.82872922, ..., 3.38297009, 3.38297009,
            3.38297009],
           ...,
           [3.05204307, 3.05204307, 3.05204307, ..., 3.38455245, 3.38455245,
            3.38646232],
           [3.28208681, 3.54721184, 3.410026  , ..., 3.37746079, 3.37746079,
            3.37746079],
           [3.53475838, 3.47912592, 3.47912592, ..., 3.38103465, 3.38265173,
            3.38265173]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>t0</span></div><div class='xr-var-dims'>(chain, draw)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>14.82 14.82 14.82 ... 15.94 15.94</div><input id='attrs-b30b29ce-2879-4760-a62d-4a835de48534' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-b30b29ce-2879-4760-a62d-4a835de48534' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-f296dabf-1f00-4cee-9b44-9aa3f8f074f8' class='xr-var-data-in' type='checkbox'><label for='data-f296dabf-1f00-4cee-9b44-9aa3f8f074f8' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[14.82415502, 14.82415502, 14.82415502, ..., 16.22072987,
            16.22072987, 16.02978369],
           [15.47479308, 15.45743054, 15.45743054, ..., 16.08112651,
            16.08112651, 16.08112651],
           [15.16929761, 15.16929761, 15.16929761, ..., 17.97436091,
            17.97436091, 17.97436091],
           ...,
           [15.49794839, 15.49794839, 15.49794839, ..., 15.64270124,
            15.64270124, 15.69794154],
           [15.09106953, 15.27817609, 15.39235609, ..., 15.4650533 ,
            15.4650533 , 15.4650533 ],
           [15.55507435, 15.37990524, 15.37990524, ..., 15.80032298,
            15.9391873 , 15.9391873 ]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>v1</span></div><div class='xr-var-dims'>(chain, draw)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>3.354 3.354 3.354 ... 3.62 3.62</div><input id='attrs-dafb49f9-6b46-4827-8acb-0b04f465c83c' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-dafb49f9-6b46-4827-8acb-0b04f465c83c' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-98c946c6-39c0-4f8b-b04e-217b86dd679e' class='xr-var-data-in' type='checkbox'><label for='data-98c946c6-39c0-4f8b-b04e-217b86dd679e' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[3.35376261, 3.35376261, 3.35376261, ..., 3.60826416, 3.60826416,
            3.59915924],
           [4.08201801, 4.11993945, 4.11993945, ..., 3.59051904, 3.59051904,
            3.59051904],
           [4.68418323, 4.68418323, 4.68418323, ..., 3.6021169 , 3.6021169 ,
            3.6021169 ],
           ...,
           [3.26296977, 3.26296977, 3.26296977, ..., 3.56634699, 3.56634699,
            3.57213808],
           [3.69347317, 3.66080588, 3.84592668, ..., 3.56476627, 3.56476627,
            3.56476627],
           [3.70484282, 3.80180191, 3.80180191, ..., 3.61412625, 3.61951374,
            3.61951374]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>t1</span></div><div class='xr-var-dims'>(chain, draw)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>15.19 15.19 15.19 ... 18.43 18.43</div><input id='attrs-3c26973c-3da8-4523-8ddb-a3e138009cd4' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-3c26973c-3da8-4523-8ddb-a3e138009cd4' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-c88ec464-41e5-47a9-a05a-3be6a69d8ae9' class='xr-var-data-in' type='checkbox'><label for='data-c88ec464-41e5-47a9-a05a-3be6a69d8ae9' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[15.1893648 , 15.1893648 , 15.1893648 , ..., 18.48034094,
            18.48034094, 18.47897334],
           [15.14899461, 15.14125171, 15.14125171, ..., 18.40747109,
            18.40747109, 18.40747109],
           [14.66919069, 14.66919069, 14.66919069, ..., 16.93077439,
            16.93077439, 16.93077439],
           ...,
           [14.85024811, 14.85024811, 14.85024811, ..., 18.76901735,
            18.76901735, 18.74181144],
           [14.0524724 , 14.24247834, 14.40057575, ..., 18.7874227 ,
            18.7874227 , 18.7874227 ],
           [15.66118776, 15.43831233, 15.43831233, ..., 18.57083936,
            18.4327819 , 18.4327819 ]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>v2</span></div><div class='xr-var-dims'>(chain, draw)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>3.335 3.335 3.335 ... 4.204 4.204</div><input id='attrs-0a4b85f1-20cd-497e-bb8a-6b2b3f9a239c' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-0a4b85f1-20cd-497e-bb8a-6b2b3f9a239c' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-845be248-d6da-424f-ae70-ce3a22a5d616' class='xr-var-data-in' type='checkbox'><label for='data-845be248-d6da-424f-ae70-ce3a22a5d616' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[3.33474202, 3.33474202, 3.33474202, ..., 4.24052808, 4.24052808,
            4.21679432],
           [4.29828295, 4.26104039, 4.26104039, ..., 4.19855004, 4.19855004,
            4.19855004],
           [3.63892327, 3.63892327, 3.63892327, ..., 4.28886641, 4.28886641,
            4.28886641],
           ...,
           [3.11401382, 3.11401382, 3.11401382, ..., 4.20535168, 4.20535168,
            4.20630194],
           [3.9351955 , 4.11518153, 3.97821636, ..., 4.24067439, 4.24067439,
            4.24067439],
           [4.28798663, 4.06667289, 4.06667289, ..., 4.2061529 , 4.20372071,
            4.20372071]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>t2</span></div><div class='xr-var-dims'>(chain, draw)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>14.26 14.26 14.26 ... 11.08 11.08</div><input id='attrs-4a8a71ed-d5ab-4b97-9132-101c56bbf453' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-4a8a71ed-d5ab-4b97-9132-101c56bbf453' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-1780a5a2-8f09-49ee-9991-8f83909171c0' class='xr-var-data-in' type='checkbox'><label for='data-1780a5a2-8f09-49ee-9991-8f83909171c0' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[14.26353154, 14.26353154, 14.26353154, ..., 12.9437031 ,
            12.9437031 , 12.16272056],
           [15.25658952, 15.17623102, 15.17623102, ..., 11.20907736,
            11.20907736, 11.20907736],
           [14.66756711, 14.66756711, 14.66756711, ..., 16.60200379,
            16.60200379, 16.60200379],
           ...,
           [14.74111027, 14.74111027, 14.74111027, ..., 12.42511106,
            12.42511106, 12.61435701],
           [14.62627131, 14.62536536, 14.7927713 , ..., 12.37921502,
            12.37921502, 12.37921502],
           [15.33141778, 15.06054236, 15.06054236, ..., 11.12877759,
            11.08422046, 11.08422046]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>v3</span></div><div class='xr-var-dims'>(chain, draw)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>3.855 3.855 3.855 ... 4.301 4.301</div><input id='attrs-901ceea9-9656-4610-bf1c-05d9dd53dd1c' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-901ceea9-9656-4610-bf1c-05d9dd53dd1c' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-6e3743c4-df6f-476f-9e04-ff24303adc67' class='xr-var-data-in' type='checkbox'><label for='data-6e3743c4-df6f-476f-9e04-ff24303adc67' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[3.85465213, 3.85465213, 3.85465213, ..., 4.32755213, 4.32755213,
            4.33594581],
           [4.25330962, 4.18413978, 4.18413978, ..., 4.32388089, 4.32388089,
            4.32388089],
           [3.15192638, 3.15192638, 3.15192638, ..., 4.33680893, 4.33680893,
            4.33680893],
           ...,
           [3.00193458, 3.00193458, 3.00193458, ..., 4.32364923, 4.32364923,
            4.31904174],
           [3.71306424, 4.03832766, 4.0091812 , ..., 4.33468598, 4.33468598,
            4.33468598],
           [4.19993904, 4.27508446, 4.27508446, ..., 4.31464089, 4.30144556,
            4.30144556]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>t3</span></div><div class='xr-var-dims'>(chain, draw)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>14.88 14.88 14.88 ... 24.09 24.09</div><input id='attrs-eaa3f88c-0773-4c5c-87f4-7144980a2bfc' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-eaa3f88c-0773-4c5c-87f4-7144980a2bfc' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-787a1fc6-eefe-4ba6-b27f-29dd41bae925' class='xr-var-data-in' type='checkbox'><label for='data-787a1fc6-eefe-4ba6-b27f-29dd41bae925' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[14.88119314, 14.88119314, 14.88119314, ..., 20.14469615,
            20.14469615, 21.75414195],
           [15.35406185, 15.54431893, 15.54431893, ..., 29.66828891,
            29.66828891, 29.66828891],
           [14.72503921, 14.72503921, 14.72503921, ..., 29.1105806 ,
            29.1105806 , 29.1105806 ],
           ...,
           [14.19596531, 14.19596531, 14.19596531, ..., 28.78134374,
            28.78134374, 28.54876686],
           [14.84736657, 14.7391001 , 14.9029344 , ..., 24.6710647 ,
            24.6710647 , 24.6710647 ],
           [15.916533  , 15.54456863, 15.54456863, ..., 24.32783643,
            24.09490052, 24.09490052]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>v4</span></div><div class='xr-var-dims'>(chain, draw)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>4.366 4.366 4.366 ... 4.31 4.31</div><input id='attrs-9b987929-c1a6-4076-8124-1846d7424087' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-9b987929-c1a6-4076-8124-1846d7424087' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-64b396ac-26c4-4731-b91e-ae76d8e39e8d' class='xr-var-data-in' type='checkbox'><label for='data-64b396ac-26c4-4731-b91e-ae76d8e39e8d' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[4.36595021, 4.36595021, 4.36595021, ..., 4.26249358, 4.26249358,
            4.28197744],
           [4.25908543, 4.36088125, 4.36088125, ..., 4.33768645, 4.33768645,
            4.33768645],
           [3.83093009, 3.83093009, 3.83093009, ..., 4.36808669, 4.36808669,
            4.36808669],
           ...,
           [4.59070375, 4.59070375, 4.59070375, ..., 4.36985461, 4.36985461,
            4.35901679],
           [5.10933969, 4.76154678, 4.63124367, ..., 4.30799655, 4.30799655,
            4.30799655],
           [4.26361331, 4.45904728, 4.45904728, ..., 4.30866301, 4.30966112,
            4.30966112]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>t4</span></div><div class='xr-var-dims'>(chain, draw)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>15.73 15.73 15.73 ... 18.19 18.19</div><input id='attrs-d05ed953-1952-4d27-b359-4995ea2e7012' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-d05ed953-1952-4d27-b359-4995ea2e7012' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-692c6490-0697-498c-90a1-9f16d9e99511' class='xr-var-data-in' type='checkbox'><label for='data-692c6490-0697-498c-90a1-9f16d9e99511' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[15.72569152, 15.72569152, 15.72569152, ..., 19.10133322,
            19.10133322, 17.61211402],
           [15.1774209 , 15.25162852, 15.25162852, ..., 11.79825195,
            11.79825195, 11.79825195],
           [15.0632103 , 15.0632103 , 15.0632103 , ..., 13.54265148,
            13.54265148, 13.54265148],
           ...,
           [15.38091349, 15.38091349, 15.38091349, ...,  9.67692924,
             9.67692924, 10.04364848],
           [15.30843484, 15.12225272, 14.8636945 , ..., 15.44604648,
            15.44604648, 15.44604648],
           [15.46002631, 15.10130457, 15.10130457, ..., 17.45494172,
            18.18877328, 18.18877328]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>v5</span></div><div class='xr-var-dims'>(chain, draw)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>4.703 4.703 4.703 ... 4.224 4.224</div><input id='attrs-4bc87557-6bde-42d5-b25a-e98d5d8d284b' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-4bc87557-6bde-42d5-b25a-e98d5d8d284b' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-3985a979-01ad-4ea7-ad21-cb0d1ed4fbe6' class='xr-var-data-in' type='checkbox'><label for='data-3985a979-01ad-4ea7-ad21-cb0d1ed4fbe6' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[4.70290331, 4.70290331, 4.70290331, ..., 4.16685485, 4.16685485,
            4.16797304],
           [4.0446815 , 4.00883035, 4.00883035, ..., 4.25039864, 4.25039864,
            4.25039864],
           [4.44495148, 4.44495148, 4.44495148, ..., 4.37959589, 4.37959589,
            4.37959589],
           ...,
           [4.48680228, 4.48680228, 4.48680228, ..., 4.26125259, 4.26125259,
            4.25232817],
           [3.988484  , 4.02206496, 4.31935853, ..., 4.13854204, 4.13854204,
            4.13854204],
           [4.26467715, 4.46801694, 4.46801694, ..., 4.20118871, 4.22353611,
            4.22353611]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>t5</span></div><div class='xr-var-dims'>(chain, draw)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>14.91 14.91 14.91 ... 6.345 6.345</div><input id='attrs-65e35ff1-7a9c-428e-af1f-8c6d78442284' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-65e35ff1-7a9c-428e-af1f-8c6d78442284' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-30fac418-530f-43d4-8309-525c902882e9' class='xr-var-data-in' type='checkbox'><label for='data-30fac418-530f-43d4-8309-525c902882e9' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[14.90960222, 14.90960222, 14.90960222, ...,  7.08677719,
             7.08677719,  7.9405521 ],
           [15.32733303, 15.33900533, 15.33900533, ...,  7.6431439 ,
             7.6431439 ,  7.6431439 ],
           [15.92765691, 15.92765691, 15.92765691, ...,  8.85738881,
             8.85738881,  8.85738881],
           ...,
           [14.50608342, 14.50608342, 14.50608342, ...,  8.72828147,
             8.72828147,  8.40978131],
           [15.27586288, 15.19776752, 15.39767381, ...,  7.07440558,
             7.07440558,  7.07440558],
           [14.72865876, 14.81553601, 14.81553601, ...,  6.73672155,
             6.34548362,  6.34548362]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>v6</span></div><div class='xr-var-dims'>(chain, draw)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>4.336 4.336 4.336 ... 4.628 4.628</div><input id='attrs-088eacf6-19b2-4f68-b1f6-2c017a0a2966' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-088eacf6-19b2-4f68-b1f6-2c017a0a2966' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-49d0e9d8-05ee-4605-80f2-8ecede6aa615' class='xr-var-data-in' type='checkbox'><label for='data-49d0e9d8-05ee-4605-80f2-8ecede6aa615' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[4.33571872, 4.33571872, 4.33571872, ..., 4.57051092, 4.57051092,
            4.5872701 ],
           [4.32418513, 4.37473426, 4.37473426, ..., 4.59864792, 4.59864792,
            4.59864792],
           [4.82043875, 4.82043875, 4.82043875, ..., 4.29791277, 4.29791277,
            4.29791277],
           ...,
           [4.32137115, 4.32137115, 4.32137115, ..., 4.57303153, 4.57303153,
            4.57691798],
           [5.04490455, 4.87357856, 4.63164637, ..., 4.48268345, 4.48268345,
            4.48268345],
           [3.95242799, 4.03409406, 4.03409406, ..., 4.6150295 , 4.62792056,
            4.62792056]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>t6</span></div><div class='xr-var-dims'>(chain, draw)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>14.48 14.48 14.48 ... 5.991 5.991</div><input id='attrs-d66f0d2b-8cd7-4cb9-8f8a-40b3cc06b1a7' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-d66f0d2b-8cd7-4cb9-8f8a-40b3cc06b1a7' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-815d8f97-0df5-424b-8c8b-fe2a7a11543f' class='xr-var-data-in' type='checkbox'><label for='data-815d8f97-0df5-424b-8c8b-fe2a7a11543f' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[14.48215209, 14.48215209, 14.48215209, ...,  6.6889812 ,
             6.6889812 ,  6.49035509],
           [15.78942129, 15.89480221, 15.89480221, ...,  6.00996917,
             6.00996917,  6.00996917],
           [14.69496494, 14.69496494, 14.69496494, ...,  7.81563704,
             7.81563704,  7.81563704],
           ...,
           [14.9816155 , 14.9816155 , 14.9816155 , ...,  6.4172863 ,
             6.4172863 ,  6.27259181],
           [15.44573361, 15.220349  , 15.09549633, ...,  5.99829081,
             5.99829081,  5.99829081],
           [14.71836106, 14.71660563, 14.71660563, ...,  6.2189921 ,
             5.99060847,  5.99060847]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>v7</span></div><div class='xr-var-dims'>(chain, draw)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>4.157 4.157 4.157 ... 4.343 4.343</div><input id='attrs-5d3acdf0-0de5-4e26-b443-123a778a23e0' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-5d3acdf0-0de5-4e26-b443-123a778a23e0' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-4561522b-315d-492d-8273-b1e991c50b6b' class='xr-var-data-in' type='checkbox'><label for='data-4561522b-315d-492d-8273-b1e991c50b6b' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[4.15718043, 4.15718043, 4.15718043, ..., 4.31216911, 4.31216911,
            4.30613621],
           [4.41626251, 4.5090584 , 4.5090584 , ..., 4.3205619 , 4.3205619 ,
            4.3205619 ],
           [3.71722966, 3.71722966, 3.71722966, ..., 4.32498255, 4.32498255,
            4.32498255],
           ...,
           [3.58725465, 3.58725465, 3.58725465, ..., 4.28497241, 4.28497241,
            4.28676966],
           [4.19625218, 4.17298516, 4.21251312, ..., 4.19248413, 4.19248413,
            4.19248413],
           [4.12813958, 4.18453666, 4.18453666, ..., 4.32389536, 4.3425041 ,
            4.3425041 ]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>t7</span></div><div class='xr-var-dims'>(chain, draw)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>14.85 14.85 14.85 ... 16.26 16.26</div><input id='attrs-1a27ebb0-7230-48c0-92da-6ce79d1c2f4f' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-1a27ebb0-7230-48c0-92da-6ce79d1c2f4f' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-c3df96c7-1bbf-43af-8db3-8044682d5327' class='xr-var-data-in' type='checkbox'><label for='data-c3df96c7-1bbf-43af-8db3-8044682d5327' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[14.85314604, 14.85314604, 14.85314604, ..., 26.36301985,
            26.36301985, 19.51039768],
           [15.2499669 , 15.3325198 , 15.3325198 , ..., 24.71770189,
            24.71770189, 24.71770189],
           [15.24343494, 15.24343494, 15.24343494, ...,  8.09601567,
             8.09601567,  8.09601567],
           ...,
           [15.74917451, 15.74917451, 15.74917451, ...,  8.79603056,
             8.79603056, 10.55920183],
           [14.67400697, 14.79701587, 14.90358185, ..., 11.38849577,
            11.38849577, 11.38849577],
           [15.03264673, 15.01984619, 15.01984619, ..., 15.09731493,
            16.26357355, 16.26357355]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>v8</span></div><div class='xr-var-dims'>(chain, draw)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>4.624 4.624 4.624 ... 4.478 4.478</div><input id='attrs-becae6fd-6199-4ee9-a878-4f55c8527d14' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-becae6fd-6199-4ee9-a878-4f55c8527d14' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-37c7d5b1-472c-4c82-87e4-e95623b7b144' class='xr-var-data-in' type='checkbox'><label for='data-37c7d5b1-472c-4c82-87e4-e95623b7b144' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[4.62362082, 4.62362082, 4.62362082, ..., 4.55767419, 4.55767419,
            4.55411416],
           [4.28448911, 4.36220754, 4.36220754, ..., 4.51365785, 4.51365785,
            4.51365785],
           [3.80214494, 3.80214494, 3.80214494, ..., 4.42857768, 4.42857768,
            4.42857768],
           ...,
           [4.90094269, 4.90094269, 4.90094269, ..., 4.49964722, 4.49964722,
            4.49264049],
           [4.8113732 , 4.80688375, 4.80243488, ..., 4.5319332 , 4.5319332 ,
            4.5319332 ],
           [4.26990022, 4.44630294, 4.44630294, ..., 4.47521038, 4.47791111,
            4.47791111]])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-80e76ff4-c57a-4a4f-a194-0b6fe781cba1' class='xr-section-summary-in' type='checkbox'  ><label for='section-80e76ff4-c57a-4a4f-a194-0b6fe781cba1' class='xr-section-summary' >Indexes: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>chain</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-3649a5cc-c2f7-4e3d-a6ee-a70f0255a993' class='xr-index-data-in' type='checkbox'/><label for='index-3649a5cc-c2f7-4e3d-a6ee-a70f0255a993' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
           18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
           36, 37, 38, 39],
          dtype=&#x27;int64&#x27;, name=&#x27;chain&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>draw</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-b1110fdc-b58d-4492-afec-0618338f81cb' class='xr-index-data-in' type='checkbox'/><label for='index-b1110fdc-b58d-4492-afec-0618338f81cb' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([   0,    1,    2,    3,    4,    5,    6,    7,    8,    9,
           ...
           1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999],
          dtype=&#x27;int64&#x27;, name=&#x27;draw&#x27;, length=2000))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-c7acfd6d-f1e0-4449-b7c5-56f850e1854c' class='xr-section-summary-in' type='checkbox'  checked><label for='section-c7acfd6d-f1e0-4449-b7c5-56f850e1854c' class='xr-section-summary' >Attributes: <span>(4)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'><dt><span>created_at :</span></dt><dd>2024-04-17T06:34:56.899934</dd><dt><span>arviz_version :</span></dt><dd>0.17.0</dd><dt><span>inference_library :</span></dt><dd>emcee</dd><dt><span>inference_library_version :</span></dt><dd>3.1.4</dd></dl></div></li></ul></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 887-946

.. code-block:: Python


    flat_samples = sampler.get_chain(discard=500, thin=500, flat=True)
    rand_indices = np.random.randint(len(flat_samples), size=100)

    _, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(12,4), gridspec_kw={'width_ratios': [1, 3, 3]})

    ax1.set_ylim(170)

    # plot samples and data predictions from samples
    for idx in rand_indices:
        sample = flat_samples[idx]
        plot_model(sample, ax=ax1, alpha=0.2, lw=0.5, color="gray")
        plot_sw_data(forward_sw(sample, periods), periods, 
                     ax=ax2, alpha=0.2, lw=0.5, color="gray")
        plot_rf_data(forward_rf(sample), rf_times,
                     ax=ax3, alpha=0.2, lw=0.5, color="gray")

    # add labels to samples
    sample_0 = flat_samples[rand_indices[0]]
    plot_model(sample_0, ax=ax1, alpha=0.5, lw=0.5, color="gray", label="samples")
    plot_sw_data(forward_sw(sample_0, periods), periods, ax=ax2, 
                 alpha=0.5, lw=0.5, color="gray", label="rayleigh_dpred from samples")
    plot_rf_data(forward_rf(sample_0), rf_times, ax=ax3, 
                 alpha=0.5, lw=0.5, color="gray", label="rf_dpred from samples")

    # plot true model and data observations
    plot_model(true_model, ax=ax1, alpha=1, color="r", label="true model")
    plot_sw_data(rayleigh_dobs, periods, ax=ax2, scatter=True, color="r", s=4, 
              label="rayleigh_dobs")
    plot_rf_data(rf_dobs, rf_times, ax=ax3, scatter=True, color="r", s=2, 
              label="rf_dobs")

    # plot damped optimisation result
    plot_model(inv_res_optimiser.model, ax=ax1, alpha=1, color="green", 
               label="damped solution")
    plot_sw_data(forward_sw(inv_res_optimiser_no_reg.model, periods), 
                 periods, ax=ax2, color="green",
                 label="rayleigh_dpred from damped solution")
    plot_rf_data(forward_rf(inv_res_optimiser.model), rf_times, 
                 ax=ax3, color="green",
                 label="rf_dpred from damped solution")

    # plot initial model for dampied optimsiation
    plot_model(init_model, ax=ax1, alpha=1, color="purple", 
               label="initial model for damped solution")
    plot_sw_data(forward_sw(init_model, periods), periods, ax=ax2, color="purple",
                 label="rayleigh_dpred from initial model for damped solution")
    plot_rf_data(forward_rf(init_model), rf_times, ax=ax3, color="purple",
                 label="rf_dpred from initial model for damped solution")

    ax1.legend(loc="upper center", bbox_to_anchor=(0.5, -0.18))
    ax2.legend(loc="upper center", bbox_to_anchor=(0.5, -0.18))
    ax3.legend(loc="upper center", bbox_to_anchor=(0.5, -0.18))
    ax1.grid()
    ax2.grid()
    ax3.grid()

    plt.tight_layout()




.. image-sg:: /examples/generated/scripts_synth_data/images/sphx_glr_sw_rf_joint_synthetic_007.png
   :alt: model, surface wave data, receiver function data
   :srcset: /examples/generated/scripts_synth_data/images/sphx_glr_sw_rf_joint_synthetic_007.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 948-964

.. code-block:: Python


    axes = az.plot_trace(
        az_idata, 
        backend_kwargs={"constrained_layout":True},
        figsize=(10,20)
    )

    for i, axes_pair in enumerate(axes):
        ax1 = axes_pair[0]
        ax2 = axes_pair[1]
        ax1.axvline(true_model[i], linestyle='dotted', color='red')
        ax1.set_xlabel("parameter value")
        ax1.set_ylabel("density value")
        ax2.set_xlabel("number of iterations")
        ax2.set_ylabel("parameter value")




.. image-sg:: /examples/generated/scripts_synth_data/images/sphx_glr_sw_rf_joint_synthetic_008.png
   :alt: v0, v0, t0, t0, v1, v1, t1, t1, v2, v2, t2, t2, v3, v3, t3, t3, v4, v4, t4, t4, v5, v5, t5, t5, v6, v6, t6, t6, v7, v7, t7, t7, v8, v8
   :srcset: /examples/generated/scripts_synth_data/images/sphx_glr_sw_rf_joint_synthetic_008.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 969-972

Trans-dimensional sampling
--------------------------


.. GENERATED FROM PYTHON SOURCE LINES 975-977

**Prepare utilities for trans-d sampling**


.. GENERATED FROM PYTHON SOURCE LINES 977-994

.. code-block:: Python


    def fwd_rayleigh_for_bayesbay(state):
        vs = state["voronoi"]["vs"]
        voronoi_sites = state["voronoi"]["discretization"]
        depths = (voronoi_sites[:-1] + voronoi_sites[1:]) / 2
        thicknesses = depths - np.insert(depths[:-1], 0, 0)
        model = form_layercake_model(thicknesses, vs)
        return forward_sw(model, periods)

    def fwd_rf_for_bayesbay(state):
        vs = state["voronoi"]["vs"]
        voronoi_sites = state["voronoi"]["discretization"]
        depths = (voronoi_sites[:-1] + voronoi_sites[1:]) / 2
        thicknesses = depths - np.insert(depths[:-1], 0, 0)
        model = form_layercake_model(thicknesses, vs)
        return forward_rf(model)








.. GENERATED FROM PYTHON SOURCE LINES 996-1005

.. code-block:: Python


    targets = [
        bayesbay.Target("rayleigh", rayleigh_dobs, covariance_mat_inv=1 / RAYLEIGH_STD**2),
        bayesbay.Target("rf", rf_dobs, covariance_mat_inv=1 / RF_STD**2),
    ]
    forward_funcs = [fwd_rayleigh_for_bayesbay, fwd_rf_for_bayesbay]

    my_log_likelihood = bayesbay.LogLikelihood(targets, forward_funcs)








.. GENERATED FROM PYTHON SOURCE LINES 1007-1030

.. code-block:: Python


    param_vs = bayesbay.prior.UniformPrior(
        name="vs", 
        vmin=[2.7, 3.2, 3.75], 
        vmax=[4, 4.75, 5], 
        position=[0, 40, 80], 
        perturb_std=0.15
    )

    def param_vs_initialize(param, positions): 
        vmin, vmax = param.get_vmin_vmax(positions)
        sorted_vals = np.sort(np.random.uniform(vmin, vmax, positions.size))
        for i in range (len(sorted_vals)):
            val = sorted_vals[i]
            vmin_i = vmin if np.isscalar(vmin) else vmin[i]
            vmax_i = vmax if np.isscalar(vmax) else vmax[i]
            if val < vmin_i or val > vmax_i:
                if val > vmax_i: sorted_vals[i] = vmax_i
                if val < vmin_i: sorted_vals[i] = vmin_i
        return sorted_vals

    param_vs.set_custom_initialize(param_vs_initialize)








.. GENERATED FROM PYTHON SOURCE LINES 1032-1047

.. code-block:: Python


    parameterization = bayesbay.parameterization.Parameterization(
        bayesbay.discretization.Voronoi1D(
            name="voronoi", 
            vmin=0, 
            vmax=150, 
            perturb_std=10, 
            n_dimensions=None, 
            n_dimensions_min=4, 
            n_dimensions_max=15, 
            parameters=[param_vs], 
        )
    )
    my_perturbation_funcs = parameterization.perturbation_functions








.. GENERATED FROM PYTHON SOURCE LINES 1049-1055

.. code-block:: Python


    n_chains=12
    walkers_start = []
    for i in range(n_chains):
        walkers_start.append(parameterization.initialize())








.. GENERATED FROM PYTHON SOURCE LINES 1060-1062

**Define ``InversionOptions``**


.. GENERATED FROM PYTHON SOURCE LINES 1062-1076

.. code-block:: Python


    inv_options_trans_d = cofi.InversionOptions()
    inv_options_trans_d.set_tool("bayesbay")
    inv_options_trans_d.set_params(
        walkers_starting_states=walkers_start,
        perturbation_funcs=my_perturbation_funcs,
        log_like_ratio_func=my_log_likelihood,
        n_chains=n_chains, 
        n_iterations=2_000, 
        burnin_iterations=1_000,
        verbose=False, 
        save_every=200, 
    )








.. GENERATED FROM PYTHON SOURCE LINES 1081-1083

**Define ``Inversion`` and run**


.. GENERATED FROM PYTHON SOURCE LINES 1083-1087

.. code-block:: Python


    inversion_trans_d_sampler = cofi.Inversion(joint_problem, inv_options_trans_d)
    inv_res_trans_d_sampler = inversion_trans_d_sampler.run()








.. GENERATED FROM PYTHON SOURCE LINES 1089-1095

.. code-block:: Python


    saved_states = inv_res_trans_d_sampler.models
    samples_voronoi = saved_states["voronoi.discretization"]
    samples_vs = saved_states["voronoi.vs"]
    interp_depths = np.arange(150, dtype=float)








.. GENERATED FROM PYTHON SOURCE LINES 1097-1157

.. code-block:: Python


    rand_indices = np.random.randint(len(samples_voronoi), size=100)

    _, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(12,4), gridspec_kw={'width_ratios': [1, 3, 3]})

    ax1.set_ylim(170)

    # plot samples and data predictions from samples
    for idx in rand_indices:
        sample_voronoi = form_voronoi_model(samples_voronoi[idx], samples_vs[idx])
        sample = voronoi_to_layercake(sample_voronoi)
        plot_model(sample, ax=ax1, alpha=0.2, lw=0.5, color="gray")
        plot_sw_data(forward_sw(sample, periods), periods, 
                     ax=ax2, alpha=0.2, lw=0.5, color="gray")
        plot_rf_data(forward_rf(sample), rf_times,
                     ax=ax3, alpha=0.2, lw=0.5, color="gray")

    # add labels to samples
    sample_0_voronoi = form_voronoi_model(samples_voronoi[0], samples_vs[0])
    sample_0 = voronoi_to_layercake(sample_0_voronoi)
    plot_model(sample_0, ax=ax1, alpha=0.2, lw=0.5, color="gray", label="samples")
    plot_sw_data(forward_sw(sample_0, periods), periods, ax=ax2, 
                 alpha=0.2, lw=0.5, color="gray", label="rayleigh_dpred from samples")
    plot_rf_data(forward_rf(sample_0), rf_times, ax=ax3, 
                 alpha=0.2, lw=0.5, color="gray", label="rf_dpred from samples")

    # plot true model and data observations
    plot_model(true_model, ax=ax1, alpha=1, color="r", label="true model")
    plot_sw_data(rayleigh_dobs, periods, ax=ax2, scatter=True, color="r", s=4, 
              label="rayleigh_dobs")
    plot_rf_data(rf_dobs, rf_times, ax=ax3, scatter=True, color="r", s=2, 
              label="rf_dobs")

    # plot damped optimisation result
    plot_model(inv_res_optimiser.model, ax=ax1, alpha=1, color="green", 
               label="damped solution")
    plot_sw_data(forward_sw(inv_res_optimiser_no_reg.model, periods), 
                 periods, ax=ax2, color="green",
                 label="rayleigh_dpred from damped solution")
    plot_rf_data(forward_rf(inv_res_optimiser.model), rf_times, 
                 ax=ax3, color="green",
                 label="rf_dpred from damped solution")

    # plot initial model for dampied optimsiation
    plot_model(init_model, ax=ax1, alpha=1, color="purple", 
               label="initial model for damped solution")
    plot_sw_data(forward_sw(init_model, periods), periods, ax=ax2, color="purple",
                 label="rayleigh_dpred from initial model for damped solution")
    plot_rf_data(forward_rf(init_model), rf_times, ax=ax3, color="purple",
                 label="rf_dpred from initial model for damped solution")

    ax1.legend(loc="upper center", bbox_to_anchor=(0.5, -0.18))
    ax2.legend(loc="upper center", bbox_to_anchor=(0.5, -0.18))
    ax3.legend(loc="upper center", bbox_to_anchor=(0.5, -0.18))
    ax1.grid()
    ax2.grid()
    ax3.grid()

    plt.tight_layout()




.. image-sg:: /examples/generated/scripts_synth_data/images/sphx_glr_sw_rf_joint_synthetic_009.png
   :alt: model, surface wave data, receiver function data
   :srcset: /examples/generated/scripts_synth_data/images/sphx_glr_sw_rf_joint_synthetic_009.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 1162-1167

--------------

Watermark
---------


.. GENERATED FROM PYTHON SOURCE LINES 1167-1173

.. code-block:: Python


    watermark_list = ["cofi", "espresso", "numpy", "matplotlib", "scipy", "bayesbay"]
    for pkg in watermark_list:
        pkg_var = __import__(pkg)
        print(pkg, getattr(pkg_var, "__version__"))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    cofi 0.2.7
    espresso 0.3.13
    numpy 1.24.4
    matplotlib 3.8.3
    scipy 1.12.0
    bayesbay 0.2.0




.. GENERATED FROM PYTHON SOURCE LINES 1174-1174

sphinx_gallery_thumbnail_number = -1


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (3 minutes 10.588 seconds)


.. _sphx_glr_download_examples_generated_scripts_synth_data_sw_rf_joint_synthetic.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: sw_rf_joint_synthetic.ipynb <sw_rf_joint_synthetic.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: sw_rf_joint_synthetic.py <sw_rf_joint_synthetic.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
