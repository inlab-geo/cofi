# --------------------------- BEGIN NOTES ---------------------------

####### TO FORMAT #######
# black --check .
# black .

####### TO TEST #######
# pytest

####### COVERAGE #######
# coverage run -m pytest; coverage report; coverage xml

####### PYLINT #######
# pylint cofi

# --------------------------- END NOTES ---------------------------

[build-system]
requires = ["setuptools>=42", "numpy", "versioningit"]
build-backend = "setuptools.build_meta"

[project]
name = "cofi"
description = "Common Framework for Inference"
authors = [{name = "InLab, CoFI development team"}]
readme = "README.md"
requires-python = ">=3.8"
keywords = ["inversion", "inference", "python package", "geoscience", "geophysics"]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Scientific/Engineering :: Physics",
    "License :: OSI Approved :: BSD License",
]
dependencies = [
    "numpy>=1.18",
    "scipy>=1.0.0",
    "emcee>=3.1.0",
    "arviz>=0.9.0",
    "findiff>=0.7.0",
    "torch>=1.10",
]
dynamic = ["version"]

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
testpaths = ["tests"]
filterwarnings = "ignore:.*invalid escape sequence.*:DeprecationWarning"

[tool.coverage.run]
omit = ["*/lib*/*", "*/lib*"]

[tool.black]
line-length = 88
target_version = ['py38']
experimental_string_processing = true
exclude = '''
(
  /(
    \.git
    | \.mypy_cache
    | \.vscode
    | build
    | lib.*
    | dist
    | _skbuild
  )/
  | tests
)
'''

[tool.versioningit.format]
distance = "{base_version}+{distance}.{vcs}{rev}"
dirty = "{base_version}+{distance}.{vcs}{rev}.dirty"
distance-dirty = "{base_version}+{distance}.{vcs}{rev}.dirty"

[tool.versioningit.write]
file = "src/cofi/_version.py"
